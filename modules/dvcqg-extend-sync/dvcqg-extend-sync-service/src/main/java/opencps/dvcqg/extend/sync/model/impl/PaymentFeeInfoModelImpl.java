/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package opencps.dvcqg.extend.sync.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.petra.string.StringBundler;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import opencps.dvcqg.extend.sync.model.PaymentFeeInfo;
import opencps.dvcqg.extend.sync.model.PaymentFeeInfoModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PaymentFeeInfo service. Represents a row in the &quot;opencps_paymentfeeinfo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link PaymentFeeInfoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PaymentFeeInfoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PaymentFeeInfoImpl
 * @see PaymentFeeInfo
 * @see PaymentFeeInfoModel
 * @generated
 */
@ProviderType
public class PaymentFeeInfoModelImpl extends BaseModelImpl<PaymentFeeInfo>
	implements PaymentFeeInfoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a payment fee info model instance should use the {@link PaymentFeeInfo} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_paymentfeeinfo";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "paymentFeeInfoId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "type_", Types.VARCHAR },
			{ "paymentFeeCode", Types.VARCHAR },
			{ "paymentFeeName", Types.VARCHAR },
			{ "amount", Types.VARCHAR },
			{ "serviceConfigMappingId", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("paymentFeeInfoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("type_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("paymentFeeCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("paymentFeeName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("amount", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("serviceConfigMappingId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_paymentfeeinfo (uuid_ VARCHAR(75) null,paymentFeeInfoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,type_ VARCHAR(75) null,paymentFeeCode VARCHAR(255) null,paymentFeeName VARCHAR(255) null,amount VARCHAR(255) null,serviceConfigMappingId LONG)";
	public static final String TABLE_SQL_DROP = "drop table opencps_paymentfeeinfo";
	public static final String ORDER_BY_JPQL = " ORDER BY paymentFeeInfo.paymentFeeInfoId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_paymentfeeinfo.paymentFeeInfoId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(dvcqg.extend.sync.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.opencps.dvcqg.extend.sync.model.PaymentFeeInfo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(dvcqg.extend.sync.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.opencps.dvcqg.extend.sync.model.PaymentFeeInfo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(dvcqg.extend.sync.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.opencps.dvcqg.extend.sync.model.PaymentFeeInfo"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long SERVICECONFIGMAPPINGID_COLUMN_BITMASK = 4L;
	public static final long UUID_COLUMN_BITMASK = 8L;
	public static final long PAYMENTFEEINFOID_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(dvcqg.extend.sync.service.util.ServiceProps.get(
				"lock.expiration.time.opencps.dvcqg.extend.sync.model.PaymentFeeInfo"));

	public PaymentFeeInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _paymentFeeInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPaymentFeeInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _paymentFeeInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PaymentFeeInfo.class;
	}

	@Override
	public String getModelClassName() {
		return PaymentFeeInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("paymentFeeInfoId", getPaymentFeeInfoId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("type", getType());
		attributes.put("paymentFeeCode", getPaymentFeeCode());
		attributes.put("paymentFeeName", getPaymentFeeName());
		attributes.put("amount", getAmount());
		attributes.put("serviceConfigMappingId", getServiceConfigMappingId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long paymentFeeInfoId = (Long)attributes.get("paymentFeeInfoId");

		if (paymentFeeInfoId != null) {
			setPaymentFeeInfoId(paymentFeeInfoId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String type = (String)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		String paymentFeeCode = (String)attributes.get("paymentFeeCode");

		if (paymentFeeCode != null) {
			setPaymentFeeCode(paymentFeeCode);
		}

		String paymentFeeName = (String)attributes.get("paymentFeeName");

		if (paymentFeeName != null) {
			setPaymentFeeName(paymentFeeName);
		}

		String amount = (String)attributes.get("amount");

		if (amount != null) {
			setAmount(amount);
		}

		Long serviceConfigMappingId = (Long)attributes.get(
				"serviceConfigMappingId");

		if (serviceConfigMappingId != null) {
			setServiceConfigMappingId(serviceConfigMappingId);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getPaymentFeeInfoId() {
		return _paymentFeeInfoId;
	}

	@Override
	public void setPaymentFeeInfoId(long paymentFeeInfoId) {
		_paymentFeeInfoId = paymentFeeInfoId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getType() {
		if (_type == null) {
			return "";
		}
		else {
			return _type;
		}
	}

	@Override
	public void setType(String type) {
		_type = type;
	}

	@Override
	public String getPaymentFeeCode() {
		if (_paymentFeeCode == null) {
			return "";
		}
		else {
			return _paymentFeeCode;
		}
	}

	@Override
	public void setPaymentFeeCode(String paymentFeeCode) {
		_paymentFeeCode = paymentFeeCode;
	}

	@Override
	public String getPaymentFeeName() {
		if (_paymentFeeName == null) {
			return "";
		}
		else {
			return _paymentFeeName;
		}
	}

	@Override
	public void setPaymentFeeName(String paymentFeeName) {
		_paymentFeeName = paymentFeeName;
	}

	@Override
	public String getAmount() {
		if (_amount == null) {
			return "";
		}
		else {
			return _amount;
		}
	}

	@Override
	public void setAmount(String amount) {
		_amount = amount;
	}

	@Override
	public long getServiceConfigMappingId() {
		return _serviceConfigMappingId;
	}

	@Override
	public void setServiceConfigMappingId(long serviceConfigMappingId) {
		_columnBitmask |= SERVICECONFIGMAPPINGID_COLUMN_BITMASK;

		if (!_setOriginalServiceConfigMappingId) {
			_setOriginalServiceConfigMappingId = true;

			_originalServiceConfigMappingId = _serviceConfigMappingId;
		}

		_serviceConfigMappingId = serviceConfigMappingId;
	}

	public long getOriginalServiceConfigMappingId() {
		return _originalServiceConfigMappingId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				PaymentFeeInfo.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			PaymentFeeInfo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PaymentFeeInfo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PaymentFeeInfo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PaymentFeeInfoImpl paymentFeeInfoImpl = new PaymentFeeInfoImpl();

		paymentFeeInfoImpl.setUuid(getUuid());
		paymentFeeInfoImpl.setPaymentFeeInfoId(getPaymentFeeInfoId());
		paymentFeeInfoImpl.setGroupId(getGroupId());
		paymentFeeInfoImpl.setCompanyId(getCompanyId());
		paymentFeeInfoImpl.setUserId(getUserId());
		paymentFeeInfoImpl.setUserName(getUserName());
		paymentFeeInfoImpl.setCreateDate(getCreateDate());
		paymentFeeInfoImpl.setModifiedDate(getModifiedDate());
		paymentFeeInfoImpl.setType(getType());
		paymentFeeInfoImpl.setPaymentFeeCode(getPaymentFeeCode());
		paymentFeeInfoImpl.setPaymentFeeName(getPaymentFeeName());
		paymentFeeInfoImpl.setAmount(getAmount());
		paymentFeeInfoImpl.setServiceConfigMappingId(getServiceConfigMappingId());

		paymentFeeInfoImpl.resetOriginalValues();

		return paymentFeeInfoImpl;
	}

	@Override
	public int compareTo(PaymentFeeInfo paymentFeeInfo) {
		long primaryKey = paymentFeeInfo.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PaymentFeeInfo)) {
			return false;
		}

		PaymentFeeInfo paymentFeeInfo = (PaymentFeeInfo)obj;

		long primaryKey = paymentFeeInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		PaymentFeeInfoModelImpl paymentFeeInfoModelImpl = this;

		paymentFeeInfoModelImpl._originalUuid = paymentFeeInfoModelImpl._uuid;

		paymentFeeInfoModelImpl._originalGroupId = paymentFeeInfoModelImpl._groupId;

		paymentFeeInfoModelImpl._setOriginalGroupId = false;

		paymentFeeInfoModelImpl._originalCompanyId = paymentFeeInfoModelImpl._companyId;

		paymentFeeInfoModelImpl._setOriginalCompanyId = false;

		paymentFeeInfoModelImpl._setModifiedDate = false;

		paymentFeeInfoModelImpl._originalServiceConfigMappingId = paymentFeeInfoModelImpl._serviceConfigMappingId;

		paymentFeeInfoModelImpl._setOriginalServiceConfigMappingId = false;

		paymentFeeInfoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PaymentFeeInfo> toCacheModel() {
		PaymentFeeInfoCacheModel paymentFeeInfoCacheModel = new PaymentFeeInfoCacheModel();

		paymentFeeInfoCacheModel.uuid = getUuid();

		String uuid = paymentFeeInfoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			paymentFeeInfoCacheModel.uuid = null;
		}

		paymentFeeInfoCacheModel.paymentFeeInfoId = getPaymentFeeInfoId();

		paymentFeeInfoCacheModel.groupId = getGroupId();

		paymentFeeInfoCacheModel.companyId = getCompanyId();

		paymentFeeInfoCacheModel.userId = getUserId();

		paymentFeeInfoCacheModel.userName = getUserName();

		String userName = paymentFeeInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			paymentFeeInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			paymentFeeInfoCacheModel.createDate = createDate.getTime();
		}
		else {
			paymentFeeInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			paymentFeeInfoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			paymentFeeInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		paymentFeeInfoCacheModel.type = getType();

		String type = paymentFeeInfoCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			paymentFeeInfoCacheModel.type = null;
		}

		paymentFeeInfoCacheModel.paymentFeeCode = getPaymentFeeCode();

		String paymentFeeCode = paymentFeeInfoCacheModel.paymentFeeCode;

		if ((paymentFeeCode != null) && (paymentFeeCode.length() == 0)) {
			paymentFeeInfoCacheModel.paymentFeeCode = null;
		}

		paymentFeeInfoCacheModel.paymentFeeName = getPaymentFeeName();

		String paymentFeeName = paymentFeeInfoCacheModel.paymentFeeName;

		if ((paymentFeeName != null) && (paymentFeeName.length() == 0)) {
			paymentFeeInfoCacheModel.paymentFeeName = null;
		}

		paymentFeeInfoCacheModel.amount = getAmount();

		String amount = paymentFeeInfoCacheModel.amount;

		if ((amount != null) && (amount.length() == 0)) {
			paymentFeeInfoCacheModel.amount = null;
		}

		paymentFeeInfoCacheModel.serviceConfigMappingId = getServiceConfigMappingId();

		return paymentFeeInfoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", paymentFeeInfoId=");
		sb.append(getPaymentFeeInfoId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", paymentFeeCode=");
		sb.append(getPaymentFeeCode());
		sb.append(", paymentFeeName=");
		sb.append(getPaymentFeeName());
		sb.append(", amount=");
		sb.append(getAmount());
		sb.append(", serviceConfigMappingId=");
		sb.append(getServiceConfigMappingId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("opencps.dvcqg.extend.sync.model.PaymentFeeInfo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentFeeInfoId</column-name><column-value><![CDATA[");
		sb.append(getPaymentFeeInfoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentFeeCode</column-name><column-value><![CDATA[");
		sb.append(getPaymentFeeCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentFeeName</column-name><column-value><![CDATA[");
		sb.append(getPaymentFeeName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amount</column-name><column-value><![CDATA[");
		sb.append(getAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceConfigMappingId</column-name><column-value><![CDATA[");
		sb.append(getServiceConfigMappingId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = PaymentFeeInfo.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			PaymentFeeInfo.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _paymentFeeInfoId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _type;
	private String _paymentFeeCode;
	private String _paymentFeeName;
	private String _amount;
	private long _serviceConfigMappingId;
	private long _originalServiceConfigMappingId;
	private boolean _setOriginalServiceConfigMappingId;
	private long _columnBitmask;
	private PaymentFeeInfo _escapedModel;
}