import io.swagger.codegen.DefaultGenerator
import io.swagger.codegen.config.CodegenConfigurator
import org.opencps.model.refactor.*
buildscript {
  ext {
    springBootVersion = '1.5.3.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath('io.swagger:swagger-codegen:2.2.2')
    classpath fileTree(dir: 'libs', include: '*.jar')
  }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'



/*version = '0.0.1-SNAPSHOT'*/
sourceCompatibility = 1.8

repositories {
  mavenCentral()
}

configurations {
  generatedCompile
}
dependencies {
	generatedCompile 'org.springframework.boot:spring-boot-starter-data-rest'
    generatedCompile 'io.springfox:springfox-swagger2:2.5.0'
    generatedCompile 'io.springfox:springfox-swagger-ui:2.5.0'

	compileOnly group: "javax.ws.rs", name: "javax.ws.rs-api", version: "2.0.1"
	compileOnly group: "org.osgi", name: "org.osgi.service.component.annotations", version: "1.3.0"
	compileOnly group: 'io.swagger', name: 'swagger-annotations', version: '1.5.18'
	compileOnly group: 'io.swagger', name: 'swagger-jaxrs', version: '1.5.18'
	
	compileOnly group: "javax.portlet", name: "portlet-api", version: "2.0"
	compileOnly group: "javax.servlet", name: "javax.servlet-api", version: "3.0.1"
	compileOnly group: "com.liferay", name: "com.liferay.osgi.util", version: "3.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.portal.spring.extender", version: "2.0.0"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "3.0.0"

	compile group: 'org.apache.cxf', name: 'cxf-rt-frontend-jaxws', version: '3.0.3'
	compile group: 'org.apache.cxf', name: 'cxf-rt-frontend-jaxrs', version: '3.0.3'
	compile group: 'org.apache.cxf', name: 'cxf-rt-transports-http', version: '3.0.3'
	compile group: 'org.apache.cxf', name: 'cxf-rt-rs-client', version: '3.0.3'
	//compile group: 'org.apache.cxf', name: 'cxf-bundle-jaxrs', version: '2.7.18'
	compile group: 'org.apache.cxf', name: 'cxf-bundle', version: '3.0.0-milestone2'
	compileOnly group: 'junit', name: 'junit', version: '4.12'
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'

	compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.1'
	compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.3.1'
	compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.3.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.0.1'	
    compile group: 'com.google.code.gson', name: 'gson', version: '2.6.2'
    //compile group: 'log4j', name: 'log4j', version: '1.2.17'
	//compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
	//compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.5'
	compile group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: '2.9.5'
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: '2.9.5'
	compile group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-base', version: '2.9.5'
    
	compileOnly group: "org.osgi", name: "org.osgi.service.jaxrs", version: "1.0.0"
	compileOnly group: 'com.liferay', name: 'com.liferay.oauth2.provider.scope.api', version: '1.0.2'
	compileOnly group: 'com.liferay', name: 'com.liferay.petra.string', version: '2.0.1'
	
//	compileOnly project(":modules:swagger-generate")
	
	compileOnly project(":modules:backend-dossiermgt:backend-dossiermgt-service")
	compileOnly project(":modules:backend-dossiermgt:backend-dossiermgt-api")

	compileOnly project(":modules:backend-usermgt:backend-usermgt-service")
	compileOnly project(":modules:backend-usermgt:backend-usermgt-api")

	compileOnly project(":modules:backend-auth")
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
}
repositories {
    flatDir {
        dirs 'libs'
    }
}

def swaggerSourcePath = 'src/main/resources/'
def targetFolder = 'src/main/java'
def defaultPackage = 'org.opencps.rest'

task generate {
  doLast{
    def config = new CodegenConfigurator()
    def invokerPackage = "$defaultPackage" + "." + namespace
    def modelPackage = "$defaultPackage" + "." + namespace + ".model"
    def apiPackage = "$defaultPackage" + "." + namespace + ".api"
    def swaggerSourceFile = "$swaggerSourcePath" + filename

    def properties = [
        'sourceFolder'  : '' + "$targetFolder",
        'invokerPackage': '' + "$invokerPackage",
        'modelPackage'  : '' + "$modelPackage",
        'apiPackage'    : '' + "$apiPackage",
        'dateLibrary'   : 'java8'
    ]
    
    println properties
    
    config.setInputSpec("file:///$projectDir/$swaggerSourceFile")
    config.setOutputDir("$projectDir")
    config.setLang("jaxrs-cxf")
    config.setAdditionalProperties(properties)
    
    new DefaultGenerator().opts(config.toClientOptInput()).generate()

    new APIModelRefactor().doRefactor(namespace)
  }
}



sourceSets {
  generated {
    compileClasspath = configurations.generatedCompile
  }
  main {
    compileClasspath += generated.output
    runtimeClasspath += generated.output
  }
  test {
    compileClasspath += generated.output
    runtimeClasspath += generated.output
  }
}

bootRun {
  classpath += sourceSets.generated.output
}

jar {
  from sourceSets.generated.output
}
