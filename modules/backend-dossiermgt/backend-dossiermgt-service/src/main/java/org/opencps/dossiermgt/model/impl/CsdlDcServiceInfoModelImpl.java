/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.dossiermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import org.opencps.dossiermgt.model.CsdlDcServiceInfo;
import org.opencps.dossiermgt.model.CsdlDcServiceInfoModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CsdlDcServiceInfo service. Represents a row in the &quot;opencps_csdldc_serviceinfo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link CsdlDcServiceInfoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CsdlDcServiceInfoImpl}.
 * </p>
 *
 * @author huymq
 * @see CsdlDcServiceInfoImpl
 * @see CsdlDcServiceInfo
 * @see CsdlDcServiceInfoModel
 * @generated
 */
@ProviderType
public class CsdlDcServiceInfoModelImpl extends BaseModelImpl<CsdlDcServiceInfo>
	implements CsdlDcServiceInfoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a csdl dc service info model instance should use the {@link CsdlDcServiceInfo} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_csdldc_serviceinfo";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "idDcService", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "serviceCode", Types.VARCHAR },
			{ "serviceCodeDvcqg", Types.VARCHAR },
			{ "status", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("idDcService", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("serviceCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("serviceCodeDvcqg", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_csdldc_serviceinfo (uuid_ VARCHAR(75) null,idDcService LONG not null primary key,groupId LONG,companyId LONG,userId LONG,serviceCode VARCHAR(75) null,serviceCodeDvcqg VARCHAR(75) null,status INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table opencps_csdldc_serviceinfo";
	public static final String ORDER_BY_JPQL = " ORDER BY csdlDcServiceInfo.idDcService ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_csdldc_serviceinfo.idDcService ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.dossiermgt.model.CsdlDcServiceInfo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.dossiermgt.model.CsdlDcServiceInfo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.dossiermgt.model.CsdlDcServiceInfo"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long SERVICECODE_COLUMN_BITMASK = 4L;
	public static final long STATUS_COLUMN_BITMASK = 8L;
	public static final long UUID_COLUMN_BITMASK = 16L;
	public static final long IDDCSERVICE_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.dossiermgt.model.CsdlDcServiceInfo"));

	public CsdlDcServiceInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _idDcService;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setIdDcService(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _idDcService;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CsdlDcServiceInfo.class;
	}

	@Override
	public String getModelClassName() {
		return CsdlDcServiceInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("idDcService", getIdDcService());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("serviceCode", getServiceCode());
		attributes.put("serviceCodeDvcqg", getServiceCodeDvcqg());
		attributes.put("status", getStatus());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long idDcService = (Long)attributes.get("idDcService");

		if (idDcService != null) {
			setIdDcService(idDcService);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String serviceCode = (String)attributes.get("serviceCode");

		if (serviceCode != null) {
			setServiceCode(serviceCode);
		}

		String serviceCodeDvcqg = (String)attributes.get("serviceCodeDvcqg");

		if (serviceCodeDvcqg != null) {
			setServiceCodeDvcqg(serviceCodeDvcqg);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getIdDcService() {
		return _idDcService;
	}

	@Override
	public void setIdDcService(long idDcService) {
		_idDcService = idDcService;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getServiceCode() {
		if (_serviceCode == null) {
			return "";
		}
		else {
			return _serviceCode;
		}
	}

	@Override
	public void setServiceCode(String serviceCode) {
		_columnBitmask |= SERVICECODE_COLUMN_BITMASK;

		if (_originalServiceCode == null) {
			_originalServiceCode = _serviceCode;
		}

		_serviceCode = serviceCode;
	}

	public String getOriginalServiceCode() {
		return GetterUtil.getString(_originalServiceCode);
	}

	@Override
	public String getServiceCodeDvcqg() {
		if (_serviceCodeDvcqg == null) {
			return "";
		}
		else {
			return _serviceCodeDvcqg;
		}
	}

	@Override
	public void setServiceCodeDvcqg(String serviceCodeDvcqg) {
		_serviceCodeDvcqg = serviceCodeDvcqg;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CsdlDcServiceInfo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CsdlDcServiceInfo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CsdlDcServiceInfo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CsdlDcServiceInfoImpl csdlDcServiceInfoImpl = new CsdlDcServiceInfoImpl();

		csdlDcServiceInfoImpl.setUuid(getUuid());
		csdlDcServiceInfoImpl.setIdDcService(getIdDcService());
		csdlDcServiceInfoImpl.setGroupId(getGroupId());
		csdlDcServiceInfoImpl.setCompanyId(getCompanyId());
		csdlDcServiceInfoImpl.setUserId(getUserId());
		csdlDcServiceInfoImpl.setServiceCode(getServiceCode());
		csdlDcServiceInfoImpl.setServiceCodeDvcqg(getServiceCodeDvcqg());
		csdlDcServiceInfoImpl.setStatus(getStatus());

		csdlDcServiceInfoImpl.resetOriginalValues();

		return csdlDcServiceInfoImpl;
	}

	@Override
	public int compareTo(CsdlDcServiceInfo csdlDcServiceInfo) {
		long primaryKey = csdlDcServiceInfo.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CsdlDcServiceInfo)) {
			return false;
		}

		CsdlDcServiceInfo csdlDcServiceInfo = (CsdlDcServiceInfo)obj;

		long primaryKey = csdlDcServiceInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		CsdlDcServiceInfoModelImpl csdlDcServiceInfoModelImpl = this;

		csdlDcServiceInfoModelImpl._originalUuid = csdlDcServiceInfoModelImpl._uuid;

		csdlDcServiceInfoModelImpl._originalGroupId = csdlDcServiceInfoModelImpl._groupId;

		csdlDcServiceInfoModelImpl._setOriginalGroupId = false;

		csdlDcServiceInfoModelImpl._originalCompanyId = csdlDcServiceInfoModelImpl._companyId;

		csdlDcServiceInfoModelImpl._setOriginalCompanyId = false;

		csdlDcServiceInfoModelImpl._originalServiceCode = csdlDcServiceInfoModelImpl._serviceCode;

		csdlDcServiceInfoModelImpl._originalStatus = csdlDcServiceInfoModelImpl._status;

		csdlDcServiceInfoModelImpl._setOriginalStatus = false;

		csdlDcServiceInfoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CsdlDcServiceInfo> toCacheModel() {
		CsdlDcServiceInfoCacheModel csdlDcServiceInfoCacheModel = new CsdlDcServiceInfoCacheModel();

		csdlDcServiceInfoCacheModel.uuid = getUuid();

		String uuid = csdlDcServiceInfoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			csdlDcServiceInfoCacheModel.uuid = null;
		}

		csdlDcServiceInfoCacheModel.idDcService = getIdDcService();

		csdlDcServiceInfoCacheModel.groupId = getGroupId();

		csdlDcServiceInfoCacheModel.companyId = getCompanyId();

		csdlDcServiceInfoCacheModel.userId = getUserId();

		csdlDcServiceInfoCacheModel.serviceCode = getServiceCode();

		String serviceCode = csdlDcServiceInfoCacheModel.serviceCode;

		if ((serviceCode != null) && (serviceCode.length() == 0)) {
			csdlDcServiceInfoCacheModel.serviceCode = null;
		}

		csdlDcServiceInfoCacheModel.serviceCodeDvcqg = getServiceCodeDvcqg();

		String serviceCodeDvcqg = csdlDcServiceInfoCacheModel.serviceCodeDvcqg;

		if ((serviceCodeDvcqg != null) && (serviceCodeDvcqg.length() == 0)) {
			csdlDcServiceInfoCacheModel.serviceCodeDvcqg = null;
		}

		csdlDcServiceInfoCacheModel.status = getStatus();

		return csdlDcServiceInfoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", idDcService=");
		sb.append(getIdDcService());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", serviceCode=");
		sb.append(getServiceCode());
		sb.append(", serviceCodeDvcqg=");
		sb.append(getServiceCodeDvcqg());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("org.opencps.dossiermgt.model.CsdlDcServiceInfo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idDcService</column-name><column-value><![CDATA[");
		sb.append(getIdDcService());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceCode</column-name><column-value><![CDATA[");
		sb.append(getServiceCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceCodeDvcqg</column-name><column-value><![CDATA[");
		sb.append(getServiceCodeDvcqg());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = CsdlDcServiceInfo.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			CsdlDcServiceInfo.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _idDcService;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _serviceCode;
	private String _originalServiceCode;
	private String _serviceCodeDvcqg;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private long _columnBitmask;
	private CsdlDcServiceInfo _escapedModel;
}