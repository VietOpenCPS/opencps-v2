/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.dossiermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import org.opencps.dossiermgt.model.ServiceInfoMapping;
import org.opencps.dossiermgt.model.ServiceInfoMappingModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ServiceInfoMapping service. Represents a row in the &quot;opencps_serviceinfomapping&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ServiceInfoMappingModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ServiceInfoMappingImpl}.
 * </p>
 *
 * @author huymq
 * @see ServiceInfoMappingImpl
 * @see ServiceInfoMapping
 * @see ServiceInfoMappingModel
 * @generated
 */
@ProviderType
public class ServiceInfoMappingModelImpl extends BaseModelImpl<ServiceInfoMapping>
	implements ServiceInfoMappingModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a service info mapping model instance should use the {@link ServiceInfoMapping} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_serviceinfomapping";
	public static final Object[][] TABLE_COLUMNS = {
			{ "serviceInfoMappingId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "serviceCode", Types.VARCHAR },
			{ "serviceCodeDVCQG", Types.VARCHAR },
			{ "serviceNameDVCQG", Types.VARCHAR },
			{ "synced", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("serviceInfoMappingId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("serviceCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("serviceCodeDVCQG", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("serviceNameDVCQG", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("synced", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_serviceinfomapping (serviceInfoMappingId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,serviceCode VARCHAR(75) null,serviceCodeDVCQG VARCHAR(75) null,serviceNameDVCQG VARCHAR(75) null,synced INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table opencps_serviceinfomapping";
	public static final String ORDER_BY_JPQL = " ORDER BY serviceInfoMapping.serviceInfoMappingId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_serviceinfomapping.serviceInfoMappingId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.dossiermgt.model.ServiceInfoMapping"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.dossiermgt.model.ServiceInfoMapping"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.dossiermgt.model.ServiceInfoMapping"),
			true);
	public static final long GROUPID_COLUMN_BITMASK = 1L;
	public static final long SERVICECODE_COLUMN_BITMASK = 2L;
	public static final long SERVICECODEDVCQG_COLUMN_BITMASK = 4L;
	public static final long SERVICEINFOMAPPINGID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.dossiermgt.model.ServiceInfoMapping"));

	public ServiceInfoMappingModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _serviceInfoMappingId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setServiceInfoMappingId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _serviceInfoMappingId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ServiceInfoMapping.class;
	}

	@Override
	public String getModelClassName() {
		return ServiceInfoMapping.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("serviceInfoMappingId", getServiceInfoMappingId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("serviceCode", getServiceCode());
		attributes.put("serviceCodeDVCQG", getServiceCodeDVCQG());
		attributes.put("serviceNameDVCQG", getServiceNameDVCQG());
		attributes.put("synced", getSynced());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long serviceInfoMappingId = (Long)attributes.get("serviceInfoMappingId");

		if (serviceInfoMappingId != null) {
			setServiceInfoMappingId(serviceInfoMappingId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String serviceCode = (String)attributes.get("serviceCode");

		if (serviceCode != null) {
			setServiceCode(serviceCode);
		}

		String serviceCodeDVCQG = (String)attributes.get("serviceCodeDVCQG");

		if (serviceCodeDVCQG != null) {
			setServiceCodeDVCQG(serviceCodeDVCQG);
		}

		String serviceNameDVCQG = (String)attributes.get("serviceNameDVCQG");

		if (serviceNameDVCQG != null) {
			setServiceNameDVCQG(serviceNameDVCQG);
		}

		Integer synced = (Integer)attributes.get("synced");

		if (synced != null) {
			setSynced(synced);
		}
	}

	@Override
	public long getServiceInfoMappingId() {
		return _serviceInfoMappingId;
	}

	@Override
	public void setServiceInfoMappingId(long serviceInfoMappingId) {
		_serviceInfoMappingId = serviceInfoMappingId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getServiceCode() {
		if (_serviceCode == null) {
			return "";
		}
		else {
			return _serviceCode;
		}
	}

	@Override
	public void setServiceCode(String serviceCode) {
		_columnBitmask |= SERVICECODE_COLUMN_BITMASK;

		if (_originalServiceCode == null) {
			_originalServiceCode = _serviceCode;
		}

		_serviceCode = serviceCode;
	}

	public String getOriginalServiceCode() {
		return GetterUtil.getString(_originalServiceCode);
	}

	@Override
	public String getServiceCodeDVCQG() {
		if (_serviceCodeDVCQG == null) {
			return "";
		}
		else {
			return _serviceCodeDVCQG;
		}
	}

	@Override
	public void setServiceCodeDVCQG(String serviceCodeDVCQG) {
		_columnBitmask |= SERVICECODEDVCQG_COLUMN_BITMASK;

		if (_originalServiceCodeDVCQG == null) {
			_originalServiceCodeDVCQG = _serviceCodeDVCQG;
		}

		_serviceCodeDVCQG = serviceCodeDVCQG;
	}

	public String getOriginalServiceCodeDVCQG() {
		return GetterUtil.getString(_originalServiceCodeDVCQG);
	}

	@Override
	public String getServiceNameDVCQG() {
		if (_serviceNameDVCQG == null) {
			return "";
		}
		else {
			return _serviceNameDVCQG;
		}
	}

	@Override
	public void setServiceNameDVCQG(String serviceNameDVCQG) {
		_serviceNameDVCQG = serviceNameDVCQG;
	}

	@Override
	public int getSynced() {
		return _synced;
	}

	@Override
	public void setSynced(int synced) {
		_synced = synced;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ServiceInfoMapping.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ServiceInfoMapping toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ServiceInfoMapping)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ServiceInfoMappingImpl serviceInfoMappingImpl = new ServiceInfoMappingImpl();

		serviceInfoMappingImpl.setServiceInfoMappingId(getServiceInfoMappingId());
		serviceInfoMappingImpl.setGroupId(getGroupId());
		serviceInfoMappingImpl.setCompanyId(getCompanyId());
		serviceInfoMappingImpl.setUserId(getUserId());
		serviceInfoMappingImpl.setUserName(getUserName());
		serviceInfoMappingImpl.setCreateDate(getCreateDate());
		serviceInfoMappingImpl.setModifiedDate(getModifiedDate());
		serviceInfoMappingImpl.setServiceCode(getServiceCode());
		serviceInfoMappingImpl.setServiceCodeDVCQG(getServiceCodeDVCQG());
		serviceInfoMappingImpl.setServiceNameDVCQG(getServiceNameDVCQG());
		serviceInfoMappingImpl.setSynced(getSynced());

		serviceInfoMappingImpl.resetOriginalValues();

		return serviceInfoMappingImpl;
	}

	@Override
	public int compareTo(ServiceInfoMapping serviceInfoMapping) {
		long primaryKey = serviceInfoMapping.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ServiceInfoMapping)) {
			return false;
		}

		ServiceInfoMapping serviceInfoMapping = (ServiceInfoMapping)obj;

		long primaryKey = serviceInfoMapping.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ServiceInfoMappingModelImpl serviceInfoMappingModelImpl = this;

		serviceInfoMappingModelImpl._originalGroupId = serviceInfoMappingModelImpl._groupId;

		serviceInfoMappingModelImpl._setOriginalGroupId = false;

		serviceInfoMappingModelImpl._setModifiedDate = false;

		serviceInfoMappingModelImpl._originalServiceCode = serviceInfoMappingModelImpl._serviceCode;

		serviceInfoMappingModelImpl._originalServiceCodeDVCQG = serviceInfoMappingModelImpl._serviceCodeDVCQG;

		serviceInfoMappingModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ServiceInfoMapping> toCacheModel() {
		ServiceInfoMappingCacheModel serviceInfoMappingCacheModel = new ServiceInfoMappingCacheModel();

		serviceInfoMappingCacheModel.serviceInfoMappingId = getServiceInfoMappingId();

		serviceInfoMappingCacheModel.groupId = getGroupId();

		serviceInfoMappingCacheModel.companyId = getCompanyId();

		serviceInfoMappingCacheModel.userId = getUserId();

		serviceInfoMappingCacheModel.userName = getUserName();

		String userName = serviceInfoMappingCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			serviceInfoMappingCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			serviceInfoMappingCacheModel.createDate = createDate.getTime();
		}
		else {
			serviceInfoMappingCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			serviceInfoMappingCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			serviceInfoMappingCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		serviceInfoMappingCacheModel.serviceCode = getServiceCode();

		String serviceCode = serviceInfoMappingCacheModel.serviceCode;

		if ((serviceCode != null) && (serviceCode.length() == 0)) {
			serviceInfoMappingCacheModel.serviceCode = null;
		}

		serviceInfoMappingCacheModel.serviceCodeDVCQG = getServiceCodeDVCQG();

		String serviceCodeDVCQG = serviceInfoMappingCacheModel.serviceCodeDVCQG;

		if ((serviceCodeDVCQG != null) && (serviceCodeDVCQG.length() == 0)) {
			serviceInfoMappingCacheModel.serviceCodeDVCQG = null;
		}

		serviceInfoMappingCacheModel.serviceNameDVCQG = getServiceNameDVCQG();

		String serviceNameDVCQG = serviceInfoMappingCacheModel.serviceNameDVCQG;

		if ((serviceNameDVCQG != null) && (serviceNameDVCQG.length() == 0)) {
			serviceInfoMappingCacheModel.serviceNameDVCQG = null;
		}

		serviceInfoMappingCacheModel.synced = getSynced();

		return serviceInfoMappingCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{serviceInfoMappingId=");
		sb.append(getServiceInfoMappingId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", serviceCode=");
		sb.append(getServiceCode());
		sb.append(", serviceCodeDVCQG=");
		sb.append(getServiceCodeDVCQG());
		sb.append(", serviceNameDVCQG=");
		sb.append(getServiceNameDVCQG());
		sb.append(", synced=");
		sb.append(getSynced());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("org.opencps.dossiermgt.model.ServiceInfoMapping");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>serviceInfoMappingId</column-name><column-value><![CDATA[");
		sb.append(getServiceInfoMappingId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceCode</column-name><column-value><![CDATA[");
		sb.append(getServiceCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceCodeDVCQG</column-name><column-value><![CDATA[");
		sb.append(getServiceCodeDVCQG());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceNameDVCQG</column-name><column-value><![CDATA[");
		sb.append(getServiceNameDVCQG());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>synced</column-name><column-value><![CDATA[");
		sb.append(getSynced());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ServiceInfoMapping.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ServiceInfoMapping.class, ModelWrapper.class
		};
	private long _serviceInfoMappingId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _serviceCode;
	private String _originalServiceCode;
	private String _serviceCodeDVCQG;
	private String _originalServiceCodeDVCQG;
	private String _serviceNameDVCQG;
	private int _synced;
	private long _columnBitmask;
	private ServiceInfoMapping _escapedModel;
}