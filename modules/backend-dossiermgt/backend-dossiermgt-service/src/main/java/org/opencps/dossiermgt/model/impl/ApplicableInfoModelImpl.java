/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.dossiermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import org.opencps.dossiermgt.model.ApplicableInfo;
import org.opencps.dossiermgt.model.ApplicableInfoModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ApplicableInfo service. Represents a row in the &quot;opencps_applicableInfo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ApplicableInfoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ApplicableInfoImpl}.
 * </p>
 *
 * @author huymq
 * @see ApplicableInfoImpl
 * @see ApplicableInfo
 * @see ApplicableInfoModel
 * @generated
 */
@ProviderType
public class ApplicableInfoModelImpl extends BaseModelImpl<ApplicableInfo>
	implements ApplicableInfoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a applicable info model instance should use the {@link ApplicableInfo} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_applicableInfo";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "applicableInfoId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "serviceCode", Types.VARCHAR },
			{ "govAgencyCode", Types.VARCHAR },
			{ "serviceLevel", Types.INTEGER },
			{ "serviceConfigMappingId", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicableInfoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("serviceCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("govAgencyCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("serviceLevel", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("serviceConfigMappingId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_applicableInfo (uuid_ VARCHAR(75) null,applicableInfoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,serviceCode VARCHAR(75) null,govAgencyCode VARCHAR(75) null,serviceLevel INTEGER,serviceConfigMappingId LONG)";
	public static final String TABLE_SQL_DROP = "drop table opencps_applicableInfo";
	public static final String ORDER_BY_JPQL = " ORDER BY applicableInfo.applicableInfoId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_applicableInfo.applicableInfoId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.dossiermgt.model.ApplicableInfo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.dossiermgt.model.ApplicableInfo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.dossiermgt.model.ApplicableInfo"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GOVAGENCYCODE_COLUMN_BITMASK = 2L;
	public static final long GROUPID_COLUMN_BITMASK = 4L;
	public static final long SERVICECODE_COLUMN_BITMASK = 8L;
	public static final long SERVICECONFIGMAPPINGID_COLUMN_BITMASK = 16L;
	public static final long SERVICELEVEL_COLUMN_BITMASK = 32L;
	public static final long UUID_COLUMN_BITMASK = 64L;
	public static final long APPLICABLEINFOID_COLUMN_BITMASK = 128L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.dossiermgt.model.ApplicableInfo"));

	public ApplicableInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _applicableInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setApplicableInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _applicableInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ApplicableInfo.class;
	}

	@Override
	public String getModelClassName() {
		return ApplicableInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("applicableInfoId", getApplicableInfoId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("serviceCode", getServiceCode());
		attributes.put("govAgencyCode", getGovAgencyCode());
		attributes.put("serviceLevel", getServiceLevel());
		attributes.put("serviceConfigMappingId", getServiceConfigMappingId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long applicableInfoId = (Long)attributes.get("applicableInfoId");

		if (applicableInfoId != null) {
			setApplicableInfoId(applicableInfoId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String serviceCode = (String)attributes.get("serviceCode");

		if (serviceCode != null) {
			setServiceCode(serviceCode);
		}

		String govAgencyCode = (String)attributes.get("govAgencyCode");

		if (govAgencyCode != null) {
			setGovAgencyCode(govAgencyCode);
		}

		Integer serviceLevel = (Integer)attributes.get("serviceLevel");

		if (serviceLevel != null) {
			setServiceLevel(serviceLevel);
		}

		Long serviceConfigMappingId = (Long)attributes.get(
				"serviceConfigMappingId");

		if (serviceConfigMappingId != null) {
			setServiceConfigMappingId(serviceConfigMappingId);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getApplicableInfoId() {
		return _applicableInfoId;
	}

	@Override
	public void setApplicableInfoId(long applicableInfoId) {
		_applicableInfoId = applicableInfoId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getServiceCode() {
		if (_serviceCode == null) {
			return "";
		}
		else {
			return _serviceCode;
		}
	}

	@Override
	public void setServiceCode(String serviceCode) {
		_columnBitmask |= SERVICECODE_COLUMN_BITMASK;

		if (_originalServiceCode == null) {
			_originalServiceCode = _serviceCode;
		}

		_serviceCode = serviceCode;
	}

	public String getOriginalServiceCode() {
		return GetterUtil.getString(_originalServiceCode);
	}

	@Override
	public String getGovAgencyCode() {
		if (_govAgencyCode == null) {
			return "";
		}
		else {
			return _govAgencyCode;
		}
	}

	@Override
	public void setGovAgencyCode(String govAgencyCode) {
		_columnBitmask |= GOVAGENCYCODE_COLUMN_BITMASK;

		if (_originalGovAgencyCode == null) {
			_originalGovAgencyCode = _govAgencyCode;
		}

		_govAgencyCode = govAgencyCode;
	}

	public String getOriginalGovAgencyCode() {
		return GetterUtil.getString(_originalGovAgencyCode);
	}

	@Override
	public int getServiceLevel() {
		return _serviceLevel;
	}

	@Override
	public void setServiceLevel(int serviceLevel) {
		_columnBitmask |= SERVICELEVEL_COLUMN_BITMASK;

		if (!_setOriginalServiceLevel) {
			_setOriginalServiceLevel = true;

			_originalServiceLevel = _serviceLevel;
		}

		_serviceLevel = serviceLevel;
	}

	public int getOriginalServiceLevel() {
		return _originalServiceLevel;
	}

	@Override
	public long getServiceConfigMappingId() {
		return _serviceConfigMappingId;
	}

	@Override
	public void setServiceConfigMappingId(long serviceConfigMappingId) {
		_columnBitmask |= SERVICECONFIGMAPPINGID_COLUMN_BITMASK;

		if (!_setOriginalServiceConfigMappingId) {
			_setOriginalServiceConfigMappingId = true;

			_originalServiceConfigMappingId = _serviceConfigMappingId;
		}

		_serviceConfigMappingId = serviceConfigMappingId;
	}

	public long getOriginalServiceConfigMappingId() {
		return _originalServiceConfigMappingId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				ApplicableInfo.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ApplicableInfo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ApplicableInfo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ApplicableInfo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ApplicableInfoImpl applicableInfoImpl = new ApplicableInfoImpl();

		applicableInfoImpl.setUuid(getUuid());
		applicableInfoImpl.setApplicableInfoId(getApplicableInfoId());
		applicableInfoImpl.setGroupId(getGroupId());
		applicableInfoImpl.setCompanyId(getCompanyId());
		applicableInfoImpl.setUserId(getUserId());
		applicableInfoImpl.setUserName(getUserName());
		applicableInfoImpl.setCreateDate(getCreateDate());
		applicableInfoImpl.setModifiedDate(getModifiedDate());
		applicableInfoImpl.setServiceCode(getServiceCode());
		applicableInfoImpl.setGovAgencyCode(getGovAgencyCode());
		applicableInfoImpl.setServiceLevel(getServiceLevel());
		applicableInfoImpl.setServiceConfigMappingId(getServiceConfigMappingId());

		applicableInfoImpl.resetOriginalValues();

		return applicableInfoImpl;
	}

	@Override
	public int compareTo(ApplicableInfo applicableInfo) {
		long primaryKey = applicableInfo.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ApplicableInfo)) {
			return false;
		}

		ApplicableInfo applicableInfo = (ApplicableInfo)obj;

		long primaryKey = applicableInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ApplicableInfoModelImpl applicableInfoModelImpl = this;

		applicableInfoModelImpl._originalUuid = applicableInfoModelImpl._uuid;

		applicableInfoModelImpl._originalGroupId = applicableInfoModelImpl._groupId;

		applicableInfoModelImpl._setOriginalGroupId = false;

		applicableInfoModelImpl._originalCompanyId = applicableInfoModelImpl._companyId;

		applicableInfoModelImpl._setOriginalCompanyId = false;

		applicableInfoModelImpl._setModifiedDate = false;

		applicableInfoModelImpl._originalServiceCode = applicableInfoModelImpl._serviceCode;

		applicableInfoModelImpl._originalGovAgencyCode = applicableInfoModelImpl._govAgencyCode;

		applicableInfoModelImpl._originalServiceLevel = applicableInfoModelImpl._serviceLevel;

		applicableInfoModelImpl._setOriginalServiceLevel = false;

		applicableInfoModelImpl._originalServiceConfigMappingId = applicableInfoModelImpl._serviceConfigMappingId;

		applicableInfoModelImpl._setOriginalServiceConfigMappingId = false;

		applicableInfoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ApplicableInfo> toCacheModel() {
		ApplicableInfoCacheModel applicableInfoCacheModel = new ApplicableInfoCacheModel();

		applicableInfoCacheModel.uuid = getUuid();

		String uuid = applicableInfoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			applicableInfoCacheModel.uuid = null;
		}

		applicableInfoCacheModel.applicableInfoId = getApplicableInfoId();

		applicableInfoCacheModel.groupId = getGroupId();

		applicableInfoCacheModel.companyId = getCompanyId();

		applicableInfoCacheModel.userId = getUserId();

		applicableInfoCacheModel.userName = getUserName();

		String userName = applicableInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			applicableInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			applicableInfoCacheModel.createDate = createDate.getTime();
		}
		else {
			applicableInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			applicableInfoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			applicableInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		applicableInfoCacheModel.serviceCode = getServiceCode();

		String serviceCode = applicableInfoCacheModel.serviceCode;

		if ((serviceCode != null) && (serviceCode.length() == 0)) {
			applicableInfoCacheModel.serviceCode = null;
		}

		applicableInfoCacheModel.govAgencyCode = getGovAgencyCode();

		String govAgencyCode = applicableInfoCacheModel.govAgencyCode;

		if ((govAgencyCode != null) && (govAgencyCode.length() == 0)) {
			applicableInfoCacheModel.govAgencyCode = null;
		}

		applicableInfoCacheModel.serviceLevel = getServiceLevel();

		applicableInfoCacheModel.serviceConfigMappingId = getServiceConfigMappingId();

		return applicableInfoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", applicableInfoId=");
		sb.append(getApplicableInfoId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", serviceCode=");
		sb.append(getServiceCode());
		sb.append(", govAgencyCode=");
		sb.append(getGovAgencyCode());
		sb.append(", serviceLevel=");
		sb.append(getServiceLevel());
		sb.append(", serviceConfigMappingId=");
		sb.append(getServiceConfigMappingId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("org.opencps.dossiermgt.model.ApplicableInfo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicableInfoId</column-name><column-value><![CDATA[");
		sb.append(getApplicableInfoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceCode</column-name><column-value><![CDATA[");
		sb.append(getServiceCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyCode</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceLevel</column-name><column-value><![CDATA[");
		sb.append(getServiceLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceConfigMappingId</column-name><column-value><![CDATA[");
		sb.append(getServiceConfigMappingId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ApplicableInfo.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ApplicableInfo.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _applicableInfoId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _serviceCode;
	private String _originalServiceCode;
	private String _govAgencyCode;
	private String _originalGovAgencyCode;
	private int _serviceLevel;
	private int _originalServiceLevel;
	private boolean _setOriginalServiceLevel;
	private long _serviceConfigMappingId;
	private long _originalServiceConfigMappingId;
	private boolean _setOriginalServiceConfigMappingId;
	private long _columnBitmask;
	private ApplicableInfo _escapedModel;
}