/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.dossiermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import org.opencps.dossiermgt.model.EForm;
import org.opencps.dossiermgt.model.EFormModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the EForm service. Represents a row in the &quot;opencps_eform&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link EFormModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EFormImpl}.
 * </p>
 *
 * @author huymq
 * @see EFormImpl
 * @see EForm
 * @see EFormModel
 * @generated
 */
@ProviderType
public class EFormModelImpl extends BaseModelImpl<EForm> implements EFormModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e form model instance should use the {@link EForm} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_eform";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "eFormId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "eFormNo", Types.VARCHAR },
			{ "serviceCode", Types.VARCHAR },
			{ "fileTemplateNo", Types.VARCHAR },
			{ "eFormName", Types.VARCHAR },
			{ "formScriptFileId", Types.BIGINT },
			{ "formReportFileId", Types.BIGINT },
			{ "eFormData", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "secret", Types.VARCHAR },
			{ "govAgencyCode", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("eFormId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("eFormNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("serviceCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fileTemplateNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("eFormName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("formScriptFileId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("formReportFileId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("eFormData", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("secret", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("govAgencyCode", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_eform (uuid_ VARCHAR(75) null,eFormId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(255) null,createDate DATE null,modifiedDate DATE null,eFormNo VARCHAR(128) null,serviceCode VARCHAR(128) null,fileTemplateNo VARCHAR(128) null,eFormName VARCHAR(512) null,formScriptFileId LONG,formReportFileId LONG,eFormData TEXT null,email VARCHAR(255) null,secret VARCHAR(75) null,govAgencyCode VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table opencps_eform";
	public static final String ORDER_BY_JPQL = " ORDER BY eForm.eFormId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_eform.eFormId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.dossiermgt.model.EForm"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.dossiermgt.model.EForm"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.dossiermgt.model.EForm"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long EFORMNO_COLUMN_BITMASK = 2L;
	public static final long GROUPID_COLUMN_BITMASK = 4L;
	public static final long SERVICECODE_COLUMN_BITMASK = 8L;
	public static final long UUID_COLUMN_BITMASK = 16L;
	public static final long EFORMID_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.dossiermgt.model.EForm"));

	public EFormModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _eFormId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEFormId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _eFormId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EForm.class;
	}

	@Override
	public String getModelClassName() {
		return EForm.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("eFormId", getEFormId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("eFormNo", getEFormNo());
		attributes.put("serviceCode", getServiceCode());
		attributes.put("fileTemplateNo", getFileTemplateNo());
		attributes.put("eFormName", getEFormName());
		attributes.put("formScriptFileId", getFormScriptFileId());
		attributes.put("formReportFileId", getFormReportFileId());
		attributes.put("eFormData", getEFormData());
		attributes.put("email", getEmail());
		attributes.put("secret", getSecret());
		attributes.put("govAgencyCode", getGovAgencyCode());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long eFormId = (Long)attributes.get("eFormId");

		if (eFormId != null) {
			setEFormId(eFormId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String eFormNo = (String)attributes.get("eFormNo");

		if (eFormNo != null) {
			setEFormNo(eFormNo);
		}

		String serviceCode = (String)attributes.get("serviceCode");

		if (serviceCode != null) {
			setServiceCode(serviceCode);
		}

		String fileTemplateNo = (String)attributes.get("fileTemplateNo");

		if (fileTemplateNo != null) {
			setFileTemplateNo(fileTemplateNo);
		}

		String eFormName = (String)attributes.get("eFormName");

		if (eFormName != null) {
			setEFormName(eFormName);
		}

		Long formScriptFileId = (Long)attributes.get("formScriptFileId");

		if (formScriptFileId != null) {
			setFormScriptFileId(formScriptFileId);
		}

		Long formReportFileId = (Long)attributes.get("formReportFileId");

		if (formReportFileId != null) {
			setFormReportFileId(formReportFileId);
		}

		String eFormData = (String)attributes.get("eFormData");

		if (eFormData != null) {
			setEFormData(eFormData);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String secret = (String)attributes.get("secret");

		if (secret != null) {
			setSecret(secret);
		}

		String govAgencyCode = (String)attributes.get("govAgencyCode");

		if (govAgencyCode != null) {
			setGovAgencyCode(govAgencyCode);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getEFormId() {
		return _eFormId;
	}

	@Override
	public void setEFormId(long eFormId) {
		_eFormId = eFormId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getEFormNo() {
		if (_eFormNo == null) {
			return "";
		}
		else {
			return _eFormNo;
		}
	}

	@Override
	public void setEFormNo(String eFormNo) {
		_columnBitmask |= EFORMNO_COLUMN_BITMASK;

		if (_originalEFormNo == null) {
			_originalEFormNo = _eFormNo;
		}

		_eFormNo = eFormNo;
	}

	public String getOriginalEFormNo() {
		return GetterUtil.getString(_originalEFormNo);
	}

	@Override
	public String getServiceCode() {
		if (_serviceCode == null) {
			return "";
		}
		else {
			return _serviceCode;
		}
	}

	@Override
	public void setServiceCode(String serviceCode) {
		_columnBitmask |= SERVICECODE_COLUMN_BITMASK;

		if (_originalServiceCode == null) {
			_originalServiceCode = _serviceCode;
		}

		_serviceCode = serviceCode;
	}

	public String getOriginalServiceCode() {
		return GetterUtil.getString(_originalServiceCode);
	}

	@Override
	public String getFileTemplateNo() {
		if (_fileTemplateNo == null) {
			return "";
		}
		else {
			return _fileTemplateNo;
		}
	}

	@Override
	public void setFileTemplateNo(String fileTemplateNo) {
		_fileTemplateNo = fileTemplateNo;
	}

	@Override
	public String getEFormName() {
		if (_eFormName == null) {
			return "";
		}
		else {
			return _eFormName;
		}
	}

	@Override
	public void setEFormName(String eFormName) {
		_eFormName = eFormName;
	}

	@Override
	public long getFormScriptFileId() {
		return _formScriptFileId;
	}

	@Override
	public void setFormScriptFileId(long formScriptFileId) {
		_formScriptFileId = formScriptFileId;
	}

	@Override
	public long getFormReportFileId() {
		return _formReportFileId;
	}

	@Override
	public void setFormReportFileId(long formReportFileId) {
		_formReportFileId = formReportFileId;
	}

	@Override
	public String getEFormData() {
		if (_eFormData == null) {
			return "";
		}
		else {
			return _eFormData;
		}
	}

	@Override
	public void setEFormData(String eFormData) {
		_eFormData = eFormData;
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return "";
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@Override
	public String getSecret() {
		if (_secret == null) {
			return "";
		}
		else {
			return _secret;
		}
	}

	@Override
	public void setSecret(String secret) {
		_secret = secret;
	}

	@Override
	public String getGovAgencyCode() {
		if (_govAgencyCode == null) {
			return "";
		}
		else {
			return _govAgencyCode;
		}
	}

	@Override
	public void setGovAgencyCode(String govAgencyCode) {
		_govAgencyCode = govAgencyCode;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				EForm.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			EForm.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EForm toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EForm)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EFormImpl eFormImpl = new EFormImpl();

		eFormImpl.setUuid(getUuid());
		eFormImpl.setEFormId(getEFormId());
		eFormImpl.setGroupId(getGroupId());
		eFormImpl.setCompanyId(getCompanyId());
		eFormImpl.setUserId(getUserId());
		eFormImpl.setUserName(getUserName());
		eFormImpl.setCreateDate(getCreateDate());
		eFormImpl.setModifiedDate(getModifiedDate());
		eFormImpl.setEFormNo(getEFormNo());
		eFormImpl.setServiceCode(getServiceCode());
		eFormImpl.setFileTemplateNo(getFileTemplateNo());
		eFormImpl.setEFormName(getEFormName());
		eFormImpl.setFormScriptFileId(getFormScriptFileId());
		eFormImpl.setFormReportFileId(getFormReportFileId());
		eFormImpl.setEFormData(getEFormData());
		eFormImpl.setEmail(getEmail());
		eFormImpl.setSecret(getSecret());
		eFormImpl.setGovAgencyCode(getGovAgencyCode());

		eFormImpl.resetOriginalValues();

		return eFormImpl;
	}

	@Override
	public int compareTo(EForm eForm) {
		long primaryKey = eForm.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EForm)) {
			return false;
		}

		EForm eForm = (EForm)obj;

		long primaryKey = eForm.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		EFormModelImpl eFormModelImpl = this;

		eFormModelImpl._originalUuid = eFormModelImpl._uuid;

		eFormModelImpl._originalGroupId = eFormModelImpl._groupId;

		eFormModelImpl._setOriginalGroupId = false;

		eFormModelImpl._originalCompanyId = eFormModelImpl._companyId;

		eFormModelImpl._setOriginalCompanyId = false;

		eFormModelImpl._setModifiedDate = false;

		eFormModelImpl._originalEFormNo = eFormModelImpl._eFormNo;

		eFormModelImpl._originalServiceCode = eFormModelImpl._serviceCode;

		eFormModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EForm> toCacheModel() {
		EFormCacheModel eFormCacheModel = new EFormCacheModel();

		eFormCacheModel.uuid = getUuid();

		String uuid = eFormCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			eFormCacheModel.uuid = null;
		}

		eFormCacheModel.eFormId = getEFormId();

		eFormCacheModel.groupId = getGroupId();

		eFormCacheModel.companyId = getCompanyId();

		eFormCacheModel.userId = getUserId();

		eFormCacheModel.userName = getUserName();

		String userName = eFormCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			eFormCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			eFormCacheModel.createDate = createDate.getTime();
		}
		else {
			eFormCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			eFormCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			eFormCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		eFormCacheModel.eFormNo = getEFormNo();

		String eFormNo = eFormCacheModel.eFormNo;

		if ((eFormNo != null) && (eFormNo.length() == 0)) {
			eFormCacheModel.eFormNo = null;
		}

		eFormCacheModel.serviceCode = getServiceCode();

		String serviceCode = eFormCacheModel.serviceCode;

		if ((serviceCode != null) && (serviceCode.length() == 0)) {
			eFormCacheModel.serviceCode = null;
		}

		eFormCacheModel.fileTemplateNo = getFileTemplateNo();

		String fileTemplateNo = eFormCacheModel.fileTemplateNo;

		if ((fileTemplateNo != null) && (fileTemplateNo.length() == 0)) {
			eFormCacheModel.fileTemplateNo = null;
		}

		eFormCacheModel.eFormName = getEFormName();

		String eFormName = eFormCacheModel.eFormName;

		if ((eFormName != null) && (eFormName.length() == 0)) {
			eFormCacheModel.eFormName = null;
		}

		eFormCacheModel.formScriptFileId = getFormScriptFileId();

		eFormCacheModel.formReportFileId = getFormReportFileId();

		eFormCacheModel.eFormData = getEFormData();

		String eFormData = eFormCacheModel.eFormData;

		if ((eFormData != null) && (eFormData.length() == 0)) {
			eFormCacheModel.eFormData = null;
		}

		eFormCacheModel.email = getEmail();

		String email = eFormCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			eFormCacheModel.email = null;
		}

		eFormCacheModel.secret = getSecret();

		String secret = eFormCacheModel.secret;

		if ((secret != null) && (secret.length() == 0)) {
			eFormCacheModel.secret = null;
		}

		eFormCacheModel.govAgencyCode = getGovAgencyCode();

		String govAgencyCode = eFormCacheModel.govAgencyCode;

		if ((govAgencyCode != null) && (govAgencyCode.length() == 0)) {
			eFormCacheModel.govAgencyCode = null;
		}

		return eFormCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(37);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", eFormId=");
		sb.append(getEFormId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", eFormNo=");
		sb.append(getEFormNo());
		sb.append(", serviceCode=");
		sb.append(getServiceCode());
		sb.append(", fileTemplateNo=");
		sb.append(getFileTemplateNo());
		sb.append(", eFormName=");
		sb.append(getEFormName());
		sb.append(", formScriptFileId=");
		sb.append(getFormScriptFileId());
		sb.append(", formReportFileId=");
		sb.append(getFormReportFileId());
		sb.append(", eFormData=");
		sb.append(getEFormData());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", secret=");
		sb.append(getSecret());
		sb.append(", govAgencyCode=");
		sb.append(getGovAgencyCode());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(58);

		sb.append("<model><model-name>");
		sb.append("org.opencps.dossiermgt.model.EForm");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eFormId</column-name><column-value><![CDATA[");
		sb.append(getEFormId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eFormNo</column-name><column-value><![CDATA[");
		sb.append(getEFormNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceCode</column-name><column-value><![CDATA[");
		sb.append(getServiceCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileTemplateNo</column-name><column-value><![CDATA[");
		sb.append(getFileTemplateNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eFormName</column-name><column-value><![CDATA[");
		sb.append(getEFormName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formScriptFileId</column-name><column-value><![CDATA[");
		sb.append(getFormScriptFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formReportFileId</column-name><column-value><![CDATA[");
		sb.append(getFormReportFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eFormData</column-name><column-value><![CDATA[");
		sb.append(getEFormData());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>secret</column-name><column-value><![CDATA[");
		sb.append(getSecret());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyCode</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyCode());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = EForm.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			EForm.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _eFormId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _eFormNo;
	private String _originalEFormNo;
	private String _serviceCode;
	private String _originalServiceCode;
	private String _fileTemplateNo;
	private String _eFormName;
	private long _formScriptFileId;
	private long _formReportFileId;
	private String _eFormData;
	private String _email;
	private String _secret;
	private String _govAgencyCode;
	private long _columnBitmask;
	private EForm _escapedModel;
}