/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.dossiermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import org.opencps.dossiermgt.model.CsdlDcUser;
import org.opencps.dossiermgt.model.CsdlDcUserModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CsdlDcUser service. Represents a row in the &quot;opencps_csdldc_user&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link CsdlDcUserModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CsdlDcUserImpl}.
 * </p>
 *
 * @author huymq
 * @see CsdlDcUserImpl
 * @see CsdlDcUser
 * @see CsdlDcUserModel
 * @generated
 */
@ProviderType
public class CsdlDcUserModelImpl extends BaseModelImpl<CsdlDcUser>
	implements CsdlDcUserModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a csdl dc user model instance should use the {@link CsdlDcUser} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_csdldc_user";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "idDcUser", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "govAgencyCode", Types.VARCHAR },
			{ "govAgencyCodeDvcqg", Types.VARCHAR },
			{ "keyName", Types.VARCHAR },
			{ "keyPass", Types.VARCHAR },
			{ "userName", Types.VARCHAR },
			{ "employeeEmail", Types.VARCHAR },
			{ "status", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("idDcUser", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("govAgencyCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("govAgencyCodeDvcqg", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("keyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("keyPass", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("employeeEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_csdldc_user (uuid_ VARCHAR(75) null,idDcUser LONG not null primary key,groupId LONG,companyId LONG,userId LONG,govAgencyCode VARCHAR(75) null,govAgencyCodeDvcqg VARCHAR(75) null,keyName VARCHAR(75) null,keyPass VARCHAR(75) null,userName VARCHAR(75) null,employeeEmail VARCHAR(75) null,status INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table opencps_csdldc_user";
	public static final String ORDER_BY_JPQL = " ORDER BY csdlDcUser.idDcUser ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_csdldc_user.idDcUser ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.dossiermgt.model.CsdlDcUser"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.dossiermgt.model.CsdlDcUser"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.dossiermgt.model.CsdlDcUser"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long EMPLOYEEEMAIL_COLUMN_BITMASK = 2L;
	public static final long GOVAGENCYCODE_COLUMN_BITMASK = 4L;
	public static final long GROUPID_COLUMN_BITMASK = 8L;
	public static final long STATUS_COLUMN_BITMASK = 16L;
	public static final long UUID_COLUMN_BITMASK = 32L;
	public static final long IDDCUSER_COLUMN_BITMASK = 64L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.dossiermgt.model.CsdlDcUser"));

	public CsdlDcUserModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _idDcUser;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setIdDcUser(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _idDcUser;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CsdlDcUser.class;
	}

	@Override
	public String getModelClassName() {
		return CsdlDcUser.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("idDcUser", getIdDcUser());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("govAgencyCode", getGovAgencyCode());
		attributes.put("govAgencyCodeDvcqg", getGovAgencyCodeDvcqg());
		attributes.put("keyName", getKeyName());
		attributes.put("keyPass", getKeyPass());
		attributes.put("userName", getUserName());
		attributes.put("employeeEmail", getEmployeeEmail());
		attributes.put("status", getStatus());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long idDcUser = (Long)attributes.get("idDcUser");

		if (idDcUser != null) {
			setIdDcUser(idDcUser);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String govAgencyCode = (String)attributes.get("govAgencyCode");

		if (govAgencyCode != null) {
			setGovAgencyCode(govAgencyCode);
		}

		String govAgencyCodeDvcqg = (String)attributes.get("govAgencyCodeDvcqg");

		if (govAgencyCodeDvcqg != null) {
			setGovAgencyCodeDvcqg(govAgencyCodeDvcqg);
		}

		String keyName = (String)attributes.get("keyName");

		if (keyName != null) {
			setKeyName(keyName);
		}

		String keyPass = (String)attributes.get("keyPass");

		if (keyPass != null) {
			setKeyPass(keyPass);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		String employeeEmail = (String)attributes.get("employeeEmail");

		if (employeeEmail != null) {
			setEmployeeEmail(employeeEmail);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getIdDcUser() {
		return _idDcUser;
	}

	@Override
	public void setIdDcUser(long idDcUser) {
		_idDcUser = idDcUser;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getGovAgencyCode() {
		if (_govAgencyCode == null) {
			return "";
		}
		else {
			return _govAgencyCode;
		}
	}

	@Override
	public void setGovAgencyCode(String govAgencyCode) {
		_columnBitmask |= GOVAGENCYCODE_COLUMN_BITMASK;

		if (_originalGovAgencyCode == null) {
			_originalGovAgencyCode = _govAgencyCode;
		}

		_govAgencyCode = govAgencyCode;
	}

	public String getOriginalGovAgencyCode() {
		return GetterUtil.getString(_originalGovAgencyCode);
	}

	@Override
	public String getGovAgencyCodeDvcqg() {
		if (_govAgencyCodeDvcqg == null) {
			return "";
		}
		else {
			return _govAgencyCodeDvcqg;
		}
	}

	@Override
	public void setGovAgencyCodeDvcqg(String govAgencyCodeDvcqg) {
		_govAgencyCodeDvcqg = govAgencyCodeDvcqg;
	}

	@Override
	public String getKeyName() {
		if (_keyName == null) {
			return "";
		}
		else {
			return _keyName;
		}
	}

	@Override
	public void setKeyName(String keyName) {
		_keyName = keyName;
	}

	@Override
	public String getKeyPass() {
		if (_keyPass == null) {
			return "";
		}
		else {
			return _keyPass;
		}
	}

	@Override
	public void setKeyPass(String keyPass) {
		_keyPass = keyPass;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public String getEmployeeEmail() {
		if (_employeeEmail == null) {
			return "";
		}
		else {
			return _employeeEmail;
		}
	}

	@Override
	public void setEmployeeEmail(String employeeEmail) {
		_columnBitmask |= EMPLOYEEEMAIL_COLUMN_BITMASK;

		if (_originalEmployeeEmail == null) {
			_originalEmployeeEmail = _employeeEmail;
		}

		_employeeEmail = employeeEmail;
	}

	public String getOriginalEmployeeEmail() {
		return GetterUtil.getString(_originalEmployeeEmail);
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CsdlDcUser.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CsdlDcUser toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CsdlDcUser)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CsdlDcUserImpl csdlDcUserImpl = new CsdlDcUserImpl();

		csdlDcUserImpl.setUuid(getUuid());
		csdlDcUserImpl.setIdDcUser(getIdDcUser());
		csdlDcUserImpl.setGroupId(getGroupId());
		csdlDcUserImpl.setCompanyId(getCompanyId());
		csdlDcUserImpl.setUserId(getUserId());
		csdlDcUserImpl.setGovAgencyCode(getGovAgencyCode());
		csdlDcUserImpl.setGovAgencyCodeDvcqg(getGovAgencyCodeDvcqg());
		csdlDcUserImpl.setKeyName(getKeyName());
		csdlDcUserImpl.setKeyPass(getKeyPass());
		csdlDcUserImpl.setUserName(getUserName());
		csdlDcUserImpl.setEmployeeEmail(getEmployeeEmail());
		csdlDcUserImpl.setStatus(getStatus());

		csdlDcUserImpl.resetOriginalValues();

		return csdlDcUserImpl;
	}

	@Override
	public int compareTo(CsdlDcUser csdlDcUser) {
		long primaryKey = csdlDcUser.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CsdlDcUser)) {
			return false;
		}

		CsdlDcUser csdlDcUser = (CsdlDcUser)obj;

		long primaryKey = csdlDcUser.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		CsdlDcUserModelImpl csdlDcUserModelImpl = this;

		csdlDcUserModelImpl._originalUuid = csdlDcUserModelImpl._uuid;

		csdlDcUserModelImpl._originalGroupId = csdlDcUserModelImpl._groupId;

		csdlDcUserModelImpl._setOriginalGroupId = false;

		csdlDcUserModelImpl._originalCompanyId = csdlDcUserModelImpl._companyId;

		csdlDcUserModelImpl._setOriginalCompanyId = false;

		csdlDcUserModelImpl._originalGovAgencyCode = csdlDcUserModelImpl._govAgencyCode;

		csdlDcUserModelImpl._originalEmployeeEmail = csdlDcUserModelImpl._employeeEmail;

		csdlDcUserModelImpl._originalStatus = csdlDcUserModelImpl._status;

		csdlDcUserModelImpl._setOriginalStatus = false;

		csdlDcUserModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CsdlDcUser> toCacheModel() {
		CsdlDcUserCacheModel csdlDcUserCacheModel = new CsdlDcUserCacheModel();

		csdlDcUserCacheModel.uuid = getUuid();

		String uuid = csdlDcUserCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			csdlDcUserCacheModel.uuid = null;
		}

		csdlDcUserCacheModel.idDcUser = getIdDcUser();

		csdlDcUserCacheModel.groupId = getGroupId();

		csdlDcUserCacheModel.companyId = getCompanyId();

		csdlDcUserCacheModel.userId = getUserId();

		csdlDcUserCacheModel.govAgencyCode = getGovAgencyCode();

		String govAgencyCode = csdlDcUserCacheModel.govAgencyCode;

		if ((govAgencyCode != null) && (govAgencyCode.length() == 0)) {
			csdlDcUserCacheModel.govAgencyCode = null;
		}

		csdlDcUserCacheModel.govAgencyCodeDvcqg = getGovAgencyCodeDvcqg();

		String govAgencyCodeDvcqg = csdlDcUserCacheModel.govAgencyCodeDvcqg;

		if ((govAgencyCodeDvcqg != null) && (govAgencyCodeDvcqg.length() == 0)) {
			csdlDcUserCacheModel.govAgencyCodeDvcqg = null;
		}

		csdlDcUserCacheModel.keyName = getKeyName();

		String keyName = csdlDcUserCacheModel.keyName;

		if ((keyName != null) && (keyName.length() == 0)) {
			csdlDcUserCacheModel.keyName = null;
		}

		csdlDcUserCacheModel.keyPass = getKeyPass();

		String keyPass = csdlDcUserCacheModel.keyPass;

		if ((keyPass != null) && (keyPass.length() == 0)) {
			csdlDcUserCacheModel.keyPass = null;
		}

		csdlDcUserCacheModel.userName = getUserName();

		String userName = csdlDcUserCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			csdlDcUserCacheModel.userName = null;
		}

		csdlDcUserCacheModel.employeeEmail = getEmployeeEmail();

		String employeeEmail = csdlDcUserCacheModel.employeeEmail;

		if ((employeeEmail != null) && (employeeEmail.length() == 0)) {
			csdlDcUserCacheModel.employeeEmail = null;
		}

		csdlDcUserCacheModel.status = getStatus();

		return csdlDcUserCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", idDcUser=");
		sb.append(getIdDcUser());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", govAgencyCode=");
		sb.append(getGovAgencyCode());
		sb.append(", govAgencyCodeDvcqg=");
		sb.append(getGovAgencyCodeDvcqg());
		sb.append(", keyName=");
		sb.append(getKeyName());
		sb.append(", keyPass=");
		sb.append(getKeyPass());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", employeeEmail=");
		sb.append(getEmployeeEmail());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("org.opencps.dossiermgt.model.CsdlDcUser");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idDcUser</column-name><column-value><![CDATA[");
		sb.append(getIdDcUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyCode</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyCodeDvcqg</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyCodeDvcqg());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>keyName</column-name><column-value><![CDATA[");
		sb.append(getKeyName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>keyPass</column-name><column-value><![CDATA[");
		sb.append(getKeyPass());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeEmail</column-name><column-value><![CDATA[");
		sb.append(getEmployeeEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = CsdlDcUser.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			CsdlDcUser.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _idDcUser;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _govAgencyCode;
	private String _originalGovAgencyCode;
	private String _govAgencyCodeDvcqg;
	private String _keyName;
	private String _keyPass;
	private String _userName;
	private String _employeeEmail;
	private String _originalEmployeeEmail;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private long _columnBitmask;
	private CsdlDcUser _escapedModel;
}