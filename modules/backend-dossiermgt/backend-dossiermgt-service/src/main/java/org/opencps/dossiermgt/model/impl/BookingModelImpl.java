/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.dossiermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import org.opencps.dossiermgt.model.Booking;
import org.opencps.dossiermgt.model.BookingModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Booking service. Represents a row in the &quot;opencps_booking&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link BookingModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BookingImpl}.
 * </p>
 *
 * @author huymq
 * @see BookingImpl
 * @see Booking
 * @see BookingModel
 * @generated
 */
@ProviderType
public class BookingModelImpl extends BaseModelImpl<Booking>
	implements BookingModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a booking model instance should use the {@link Booking} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_booking";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "bookingId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "className", Types.VARCHAR },
			{ "classPK", Types.BIGINT },
			{ "serviceCode", Types.VARCHAR },
			{ "codeNumber", Types.VARCHAR },
			{ "bookingName", Types.VARCHAR },
			{ "checkinDate", Types.TIMESTAMP },
			{ "gateNumber", Types.VARCHAR },
			{ "state_", Types.INTEGER },
			{ "bookingDate", Types.TIMESTAMP },
			{ "speaking", Types.BOOLEAN },
			{ "serviceGroupCode", Types.VARCHAR },
			{ "count", Types.INTEGER },
			{ "online_", Types.BOOLEAN },
			{ "bookingInTime", Types.VARCHAR },
			{ "telNo", Types.VARCHAR },
			{ "govAgencyCode", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bookingId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("className", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("classPK", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("serviceCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("codeNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bookingName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("checkinDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("gateNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("state_", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("bookingDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("speaking", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("serviceGroupCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("count", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("online_", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("bookingInTime", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("telNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("govAgencyCode", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_booking (uuid_ VARCHAR(75) null,bookingId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(255) null,createDate DATE null,modifiedDate DATE null,className VARCHAR(255) null,classPK LONG,serviceCode VARCHAR(128) null,codeNumber VARCHAR(255) null,bookingName VARCHAR(512) null,checkinDate DATE null,gateNumber VARCHAR(255) null,state_ INTEGER,bookingDate DATE null,speaking BOOLEAN,serviceGroupCode VARCHAR(255) null,count INTEGER,online_ BOOLEAN,bookingInTime VARCHAR(255) null,telNo VARCHAR(128) null,govAgencyCode VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table opencps_booking";
	public static final String ORDER_BY_JPQL = " ORDER BY booking.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_booking.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.dossiermgt.model.Booking"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.dossiermgt.model.Booking"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.dossiermgt.model.Booking"),
			true);
	public static final long BOOKINGDATE_COLUMN_BITMASK = 1L;
	public static final long CLASSNAME_COLUMN_BITMASK = 2L;
	public static final long CLASSPK_COLUMN_BITMASK = 4L;
	public static final long CODENUMBER_COLUMN_BITMASK = 8L;
	public static final long COMPANYID_COLUMN_BITMASK = 16L;
	public static final long GROUPID_COLUMN_BITMASK = 32L;
	public static final long ONLINE_COLUMN_BITMASK = 64L;
	public static final long SERVICECODE_COLUMN_BITMASK = 128L;
	public static final long UUID_COLUMN_BITMASK = 256L;
	public static final long CREATEDATE_COLUMN_BITMASK = 512L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.dossiermgt.model.Booking"));

	public BookingModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _bookingId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBookingId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _bookingId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Booking.class;
	}

	@Override
	public String getModelClassName() {
		return Booking.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("bookingId", getBookingId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("className", getClassName());
		attributes.put("classPK", getClassPK());
		attributes.put("serviceCode", getServiceCode());
		attributes.put("codeNumber", getCodeNumber());
		attributes.put("bookingName", getBookingName());
		attributes.put("checkinDate", getCheckinDate());
		attributes.put("gateNumber", getGateNumber());
		attributes.put("state", getState());
		attributes.put("bookingDate", getBookingDate());
		attributes.put("speaking", isSpeaking());
		attributes.put("serviceGroupCode", getServiceGroupCode());
		attributes.put("count", getCount());
		attributes.put("online", isOnline());
		attributes.put("bookingInTime", getBookingInTime());
		attributes.put("telNo", getTelNo());
		attributes.put("govAgencyCode", getGovAgencyCode());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long bookingId = (Long)attributes.get("bookingId");

		if (bookingId != null) {
			setBookingId(bookingId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String className = (String)attributes.get("className");

		if (className != null) {
			setClassName(className);
		}

		Long classPK = (Long)attributes.get("classPK");

		if (classPK != null) {
			setClassPK(classPK);
		}

		String serviceCode = (String)attributes.get("serviceCode");

		if (serviceCode != null) {
			setServiceCode(serviceCode);
		}

		String codeNumber = (String)attributes.get("codeNumber");

		if (codeNumber != null) {
			setCodeNumber(codeNumber);
		}

		String bookingName = (String)attributes.get("bookingName");

		if (bookingName != null) {
			setBookingName(bookingName);
		}

		Date checkinDate = (Date)attributes.get("checkinDate");

		if (checkinDate != null) {
			setCheckinDate(checkinDate);
		}

		String gateNumber = (String)attributes.get("gateNumber");

		if (gateNumber != null) {
			setGateNumber(gateNumber);
		}

		Integer state = (Integer)attributes.get("state");

		if (state != null) {
			setState(state);
		}

		Date bookingDate = (Date)attributes.get("bookingDate");

		if (bookingDate != null) {
			setBookingDate(bookingDate);
		}

		Boolean speaking = (Boolean)attributes.get("speaking");

		if (speaking != null) {
			setSpeaking(speaking);
		}

		String serviceGroupCode = (String)attributes.get("serviceGroupCode");

		if (serviceGroupCode != null) {
			setServiceGroupCode(serviceGroupCode);
		}

		Integer count = (Integer)attributes.get("count");

		if (count != null) {
			setCount(count);
		}

		Boolean online = (Boolean)attributes.get("online");

		if (online != null) {
			setOnline(online);
		}

		String bookingInTime = (String)attributes.get("bookingInTime");

		if (bookingInTime != null) {
			setBookingInTime(bookingInTime);
		}

		String telNo = (String)attributes.get("telNo");

		if (telNo != null) {
			setTelNo(telNo);
		}

		String govAgencyCode = (String)attributes.get("govAgencyCode");

		if (govAgencyCode != null) {
			setGovAgencyCode(govAgencyCode);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getBookingId() {
		return _bookingId;
	}

	@Override
	public void setBookingId(long bookingId) {
		_bookingId = bookingId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getClassName() {
		if (_className == null) {
			return "";
		}
		else {
			return _className;
		}
	}

	@Override
	public void setClassName(String className) {
		_columnBitmask |= CLASSNAME_COLUMN_BITMASK;

		if (_originalClassName == null) {
			_originalClassName = _className;
		}

		_className = className;
	}

	public String getOriginalClassName() {
		return GetterUtil.getString(_originalClassName);
	}

	@Override
	public long getClassPK() {
		return _classPK;
	}

	@Override
	public void setClassPK(long classPK) {
		_columnBitmask |= CLASSPK_COLUMN_BITMASK;

		if (!_setOriginalClassPK) {
			_setOriginalClassPK = true;

			_originalClassPK = _classPK;
		}

		_classPK = classPK;
	}

	public long getOriginalClassPK() {
		return _originalClassPK;
	}

	@Override
	public String getServiceCode() {
		if (_serviceCode == null) {
			return "";
		}
		else {
			return _serviceCode;
		}
	}

	@Override
	public void setServiceCode(String serviceCode) {
		_columnBitmask |= SERVICECODE_COLUMN_BITMASK;

		if (_originalServiceCode == null) {
			_originalServiceCode = _serviceCode;
		}

		_serviceCode = serviceCode;
	}

	public String getOriginalServiceCode() {
		return GetterUtil.getString(_originalServiceCode);
	}

	@Override
	public String getCodeNumber() {
		if (_codeNumber == null) {
			return "";
		}
		else {
			return _codeNumber;
		}
	}

	@Override
	public void setCodeNumber(String codeNumber) {
		_columnBitmask |= CODENUMBER_COLUMN_BITMASK;

		if (_originalCodeNumber == null) {
			_originalCodeNumber = _codeNumber;
		}

		_codeNumber = codeNumber;
	}

	public String getOriginalCodeNumber() {
		return GetterUtil.getString(_originalCodeNumber);
	}

	@Override
	public String getBookingName() {
		if (_bookingName == null) {
			return "";
		}
		else {
			return _bookingName;
		}
	}

	@Override
	public void setBookingName(String bookingName) {
		_bookingName = bookingName;
	}

	@Override
	public Date getCheckinDate() {
		return _checkinDate;
	}

	@Override
	public void setCheckinDate(Date checkinDate) {
		_checkinDate = checkinDate;
	}

	@Override
	public String getGateNumber() {
		if (_gateNumber == null) {
			return "";
		}
		else {
			return _gateNumber;
		}
	}

	@Override
	public void setGateNumber(String gateNumber) {
		_gateNumber = gateNumber;
	}

	@Override
	public int getState() {
		return _state;
	}

	@Override
	public void setState(int state) {
		_state = state;
	}

	@Override
	public Date getBookingDate() {
		return _bookingDate;
	}

	@Override
	public void setBookingDate(Date bookingDate) {
		_columnBitmask |= BOOKINGDATE_COLUMN_BITMASK;

		if (_originalBookingDate == null) {
			_originalBookingDate = _bookingDate;
		}

		_bookingDate = bookingDate;
	}

	public Date getOriginalBookingDate() {
		return _originalBookingDate;
	}

	@Override
	public boolean getSpeaking() {
		return _speaking;
	}

	@Override
	public boolean isSpeaking() {
		return _speaking;
	}

	@Override
	public void setSpeaking(boolean speaking) {
		_speaking = speaking;
	}

	@Override
	public String getServiceGroupCode() {
		if (_serviceGroupCode == null) {
			return "";
		}
		else {
			return _serviceGroupCode;
		}
	}

	@Override
	public void setServiceGroupCode(String serviceGroupCode) {
		_serviceGroupCode = serviceGroupCode;
	}

	@Override
	public int getCount() {
		return _count;
	}

	@Override
	public void setCount(int count) {
		_count = count;
	}

	@Override
	public boolean getOnline() {
		return _online;
	}

	@Override
	public boolean isOnline() {
		return _online;
	}

	@Override
	public void setOnline(boolean online) {
		_columnBitmask |= ONLINE_COLUMN_BITMASK;

		if (!_setOriginalOnline) {
			_setOriginalOnline = true;

			_originalOnline = _online;
		}

		_online = online;
	}

	public boolean getOriginalOnline() {
		return _originalOnline;
	}

	@Override
	public String getBookingInTime() {
		if (_bookingInTime == null) {
			return "";
		}
		else {
			return _bookingInTime;
		}
	}

	@Override
	public void setBookingInTime(String bookingInTime) {
		_bookingInTime = bookingInTime;
	}

	@Override
	public String getTelNo() {
		if (_telNo == null) {
			return "";
		}
		else {
			return _telNo;
		}
	}

	@Override
	public void setTelNo(String telNo) {
		_telNo = telNo;
	}

	@Override
	public String getGovAgencyCode() {
		if (_govAgencyCode == null) {
			return "";
		}
		else {
			return _govAgencyCode;
		}
	}

	@Override
	public void setGovAgencyCode(String govAgencyCode) {
		_govAgencyCode = govAgencyCode;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Booking.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Booking.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Booking toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Booking)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BookingImpl bookingImpl = new BookingImpl();

		bookingImpl.setUuid(getUuid());
		bookingImpl.setBookingId(getBookingId());
		bookingImpl.setGroupId(getGroupId());
		bookingImpl.setCompanyId(getCompanyId());
		bookingImpl.setUserId(getUserId());
		bookingImpl.setUserName(getUserName());
		bookingImpl.setCreateDate(getCreateDate());
		bookingImpl.setModifiedDate(getModifiedDate());
		bookingImpl.setClassName(getClassName());
		bookingImpl.setClassPK(getClassPK());
		bookingImpl.setServiceCode(getServiceCode());
		bookingImpl.setCodeNumber(getCodeNumber());
		bookingImpl.setBookingName(getBookingName());
		bookingImpl.setCheckinDate(getCheckinDate());
		bookingImpl.setGateNumber(getGateNumber());
		bookingImpl.setState(getState());
		bookingImpl.setBookingDate(getBookingDate());
		bookingImpl.setSpeaking(isSpeaking());
		bookingImpl.setServiceGroupCode(getServiceGroupCode());
		bookingImpl.setCount(getCount());
		bookingImpl.setOnline(isOnline());
		bookingImpl.setBookingInTime(getBookingInTime());
		bookingImpl.setTelNo(getTelNo());
		bookingImpl.setGovAgencyCode(getGovAgencyCode());

		bookingImpl.resetOriginalValues();

		return bookingImpl;
	}

	@Override
	public int compareTo(Booking booking) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), booking.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Booking)) {
			return false;
		}

		Booking booking = (Booking)obj;

		long primaryKey = booking.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		BookingModelImpl bookingModelImpl = this;

		bookingModelImpl._originalUuid = bookingModelImpl._uuid;

		bookingModelImpl._originalGroupId = bookingModelImpl._groupId;

		bookingModelImpl._setOriginalGroupId = false;

		bookingModelImpl._originalCompanyId = bookingModelImpl._companyId;

		bookingModelImpl._setOriginalCompanyId = false;

		bookingModelImpl._setModifiedDate = false;

		bookingModelImpl._originalClassName = bookingModelImpl._className;

		bookingModelImpl._originalClassPK = bookingModelImpl._classPK;

		bookingModelImpl._setOriginalClassPK = false;

		bookingModelImpl._originalServiceCode = bookingModelImpl._serviceCode;

		bookingModelImpl._originalCodeNumber = bookingModelImpl._codeNumber;

		bookingModelImpl._originalBookingDate = bookingModelImpl._bookingDate;

		bookingModelImpl._originalOnline = bookingModelImpl._online;

		bookingModelImpl._setOriginalOnline = false;

		bookingModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Booking> toCacheModel() {
		BookingCacheModel bookingCacheModel = new BookingCacheModel();

		bookingCacheModel.uuid = getUuid();

		String uuid = bookingCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			bookingCacheModel.uuid = null;
		}

		bookingCacheModel.bookingId = getBookingId();

		bookingCacheModel.groupId = getGroupId();

		bookingCacheModel.companyId = getCompanyId();

		bookingCacheModel.userId = getUserId();

		bookingCacheModel.userName = getUserName();

		String userName = bookingCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			bookingCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			bookingCacheModel.createDate = createDate.getTime();
		}
		else {
			bookingCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			bookingCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			bookingCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		bookingCacheModel.className = getClassName();

		String className = bookingCacheModel.className;

		if ((className != null) && (className.length() == 0)) {
			bookingCacheModel.className = null;
		}

		bookingCacheModel.classPK = getClassPK();

		bookingCacheModel.serviceCode = getServiceCode();

		String serviceCode = bookingCacheModel.serviceCode;

		if ((serviceCode != null) && (serviceCode.length() == 0)) {
			bookingCacheModel.serviceCode = null;
		}

		bookingCacheModel.codeNumber = getCodeNumber();

		String codeNumber = bookingCacheModel.codeNumber;

		if ((codeNumber != null) && (codeNumber.length() == 0)) {
			bookingCacheModel.codeNumber = null;
		}

		bookingCacheModel.bookingName = getBookingName();

		String bookingName = bookingCacheModel.bookingName;

		if ((bookingName != null) && (bookingName.length() == 0)) {
			bookingCacheModel.bookingName = null;
		}

		Date checkinDate = getCheckinDate();

		if (checkinDate != null) {
			bookingCacheModel.checkinDate = checkinDate.getTime();
		}
		else {
			bookingCacheModel.checkinDate = Long.MIN_VALUE;
		}

		bookingCacheModel.gateNumber = getGateNumber();

		String gateNumber = bookingCacheModel.gateNumber;

		if ((gateNumber != null) && (gateNumber.length() == 0)) {
			bookingCacheModel.gateNumber = null;
		}

		bookingCacheModel.state = getState();

		Date bookingDate = getBookingDate();

		if (bookingDate != null) {
			bookingCacheModel.bookingDate = bookingDate.getTime();
		}
		else {
			bookingCacheModel.bookingDate = Long.MIN_VALUE;
		}

		bookingCacheModel.speaking = isSpeaking();

		bookingCacheModel.serviceGroupCode = getServiceGroupCode();

		String serviceGroupCode = bookingCacheModel.serviceGroupCode;

		if ((serviceGroupCode != null) && (serviceGroupCode.length() == 0)) {
			bookingCacheModel.serviceGroupCode = null;
		}

		bookingCacheModel.count = getCount();

		bookingCacheModel.online = isOnline();

		bookingCacheModel.bookingInTime = getBookingInTime();

		String bookingInTime = bookingCacheModel.bookingInTime;

		if ((bookingInTime != null) && (bookingInTime.length() == 0)) {
			bookingCacheModel.bookingInTime = null;
		}

		bookingCacheModel.telNo = getTelNo();

		String telNo = bookingCacheModel.telNo;

		if ((telNo != null) && (telNo.length() == 0)) {
			bookingCacheModel.telNo = null;
		}

		bookingCacheModel.govAgencyCode = getGovAgencyCode();

		String govAgencyCode = bookingCacheModel.govAgencyCode;

		if ((govAgencyCode != null) && (govAgencyCode.length() == 0)) {
			bookingCacheModel.govAgencyCode = null;
		}

		return bookingCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(49);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", bookingId=");
		sb.append(getBookingId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", className=");
		sb.append(getClassName());
		sb.append(", classPK=");
		sb.append(getClassPK());
		sb.append(", serviceCode=");
		sb.append(getServiceCode());
		sb.append(", codeNumber=");
		sb.append(getCodeNumber());
		sb.append(", bookingName=");
		sb.append(getBookingName());
		sb.append(", checkinDate=");
		sb.append(getCheckinDate());
		sb.append(", gateNumber=");
		sb.append(getGateNumber());
		sb.append(", state=");
		sb.append(getState());
		sb.append(", bookingDate=");
		sb.append(getBookingDate());
		sb.append(", speaking=");
		sb.append(isSpeaking());
		sb.append(", serviceGroupCode=");
		sb.append(getServiceGroupCode());
		sb.append(", count=");
		sb.append(getCount());
		sb.append(", online=");
		sb.append(isOnline());
		sb.append(", bookingInTime=");
		sb.append(getBookingInTime());
		sb.append(", telNo=");
		sb.append(getTelNo());
		sb.append(", govAgencyCode=");
		sb.append(getGovAgencyCode());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(76);

		sb.append("<model><model-name>");
		sb.append("org.opencps.dossiermgt.model.Booking");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bookingId</column-name><column-value><![CDATA[");
		sb.append(getBookingId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>className</column-name><column-value><![CDATA[");
		sb.append(getClassName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classPK</column-name><column-value><![CDATA[");
		sb.append(getClassPK());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceCode</column-name><column-value><![CDATA[");
		sb.append(getServiceCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codeNumber</column-name><column-value><![CDATA[");
		sb.append(getCodeNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bookingName</column-name><column-value><![CDATA[");
		sb.append(getBookingName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkinDate</column-name><column-value><![CDATA[");
		sb.append(getCheckinDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gateNumber</column-name><column-value><![CDATA[");
		sb.append(getGateNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>state</column-name><column-value><![CDATA[");
		sb.append(getState());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bookingDate</column-name><column-value><![CDATA[");
		sb.append(getBookingDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>speaking</column-name><column-value><![CDATA[");
		sb.append(isSpeaking());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceGroupCode</column-name><column-value><![CDATA[");
		sb.append(getServiceGroupCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>count</column-name><column-value><![CDATA[");
		sb.append(getCount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>online</column-name><column-value><![CDATA[");
		sb.append(isOnline());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bookingInTime</column-name><column-value><![CDATA[");
		sb.append(getBookingInTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telNo</column-name><column-value><![CDATA[");
		sb.append(getTelNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyCode</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyCode());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Booking.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Booking.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _bookingId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _className;
	private String _originalClassName;
	private long _classPK;
	private long _originalClassPK;
	private boolean _setOriginalClassPK;
	private String _serviceCode;
	private String _originalServiceCode;
	private String _codeNumber;
	private String _originalCodeNumber;
	private String _bookingName;
	private Date _checkinDate;
	private String _gateNumber;
	private int _state;
	private Date _bookingDate;
	private Date _originalBookingDate;
	private boolean _speaking;
	private String _serviceGroupCode;
	private int _count;
	private boolean _online;
	private boolean _originalOnline;
	private boolean _setOriginalOnline;
	private String _bookingInTime;
	private String _telNo;
	private String _govAgencyCode;
	private long _columnBitmask;
	private Booking _escapedModel;
}