/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package pay.gate.integration.dvc.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.petra.string.StringBundler;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import pay.gate.integration.dvc.model.ServiceConfigMapping;
import pay.gate.integration.dvc.model.ServiceConfigMappingModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ServiceConfigMapping service. Represents a row in the &quot;opencps_serviceconfigmapping&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ServiceConfigMappingModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ServiceConfigMappingImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ServiceConfigMappingImpl
 * @see ServiceConfigMapping
 * @see ServiceConfigMappingModel
 * @generated
 */
@ProviderType
public class ServiceConfigMappingModelImpl extends BaseModelImpl<ServiceConfigMapping>
	implements ServiceConfigMappingModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a service config mapping model instance should use the {@link ServiceConfigMapping} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_serviceconfigmapping";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "serviceConfigMappingId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "maDVC", Types.VARCHAR },
			{ "tenDVC", Types.VARCHAR },
			{ "maTTHC", Types.VARCHAR },
			{ "tenTTHC", Types.VARCHAR },
			{ "tenCQBH", Types.VARCHAR },
			{ "tenLinhVuc", Types.VARCHAR },
			{ "apdungDVC", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("serviceConfigMappingId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("maDVC", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tenDVC", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("maTTHC", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tenTTHC", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tenCQBH", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tenLinhVuc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("apdungDVC", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_serviceconfigmapping (uuid_ VARCHAR(75) null,serviceConfigMappingId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,maDVC VARCHAR(75) null,tenDVC VARCHAR(75) null,maTTHC VARCHAR(75) null,tenTTHC VARCHAR(75) null,tenCQBH VARCHAR(75) null,tenLinhVuc VARCHAR(75) null,apdungDVC VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table opencps_serviceconfigmapping";
	public static final String ORDER_BY_JPQL = " ORDER BY serviceConfigMapping.serviceConfigMappingId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_serviceconfigmapping.serviceConfigMappingId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(pay.gate.integration.dvc.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.pay.gate.integration.dvc.model.ServiceConfigMapping"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(pay.gate.integration.dvc.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.pay.gate.integration.dvc.model.ServiceConfigMapping"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(pay.gate.integration.dvc.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.pay.gate.integration.dvc.model.ServiceConfigMapping"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long MATTHC_COLUMN_BITMASK = 4L;
	public static final long UUID_COLUMN_BITMASK = 8L;
	public static final long SERVICECONFIGMAPPINGID_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(pay.gate.integration.dvc.service.util.ServiceProps.get(
				"lock.expiration.time.pay.gate.integration.dvc.model.ServiceConfigMapping"));

	public ServiceConfigMappingModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _serviceConfigMappingId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setServiceConfigMappingId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _serviceConfigMappingId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ServiceConfigMapping.class;
	}

	@Override
	public String getModelClassName() {
		return ServiceConfigMapping.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("serviceConfigMappingId", getServiceConfigMappingId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("maDVC", getMaDVC());
		attributes.put("tenDVC", getTenDVC());
		attributes.put("maTTHC", getMaTTHC());
		attributes.put("tenTTHC", getTenTTHC());
		attributes.put("tenCQBH", getTenCQBH());
		attributes.put("tenLinhVuc", getTenLinhVuc());
		attributes.put("apdungDVC", getApdungDVC());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long serviceConfigMappingId = (Long)attributes.get(
				"serviceConfigMappingId");

		if (serviceConfigMappingId != null) {
			setServiceConfigMappingId(serviceConfigMappingId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String maDVC = (String)attributes.get("maDVC");

		if (maDVC != null) {
			setMaDVC(maDVC);
		}

		String tenDVC = (String)attributes.get("tenDVC");

		if (tenDVC != null) {
			setTenDVC(tenDVC);
		}

		String maTTHC = (String)attributes.get("maTTHC");

		if (maTTHC != null) {
			setMaTTHC(maTTHC);
		}

		String tenTTHC = (String)attributes.get("tenTTHC");

		if (tenTTHC != null) {
			setTenTTHC(tenTTHC);
		}

		String tenCQBH = (String)attributes.get("tenCQBH");

		if (tenCQBH != null) {
			setTenCQBH(tenCQBH);
		}

		String tenLinhVuc = (String)attributes.get("tenLinhVuc");

		if (tenLinhVuc != null) {
			setTenLinhVuc(tenLinhVuc);
		}

		String apdungDVC = (String)attributes.get("apdungDVC");

		if (apdungDVC != null) {
			setApdungDVC(apdungDVC);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getServiceConfigMappingId() {
		return _serviceConfigMappingId;
	}

	@Override
	public void setServiceConfigMappingId(long serviceConfigMappingId) {
		_serviceConfigMappingId = serviceConfigMappingId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getMaDVC() {
		if (_maDVC == null) {
			return "";
		}
		else {
			return _maDVC;
		}
	}

	@Override
	public void setMaDVC(String maDVC) {
		_maDVC = maDVC;
	}

	@Override
	public String getTenDVC() {
		if (_tenDVC == null) {
			return "";
		}
		else {
			return _tenDVC;
		}
	}

	@Override
	public void setTenDVC(String tenDVC) {
		_tenDVC = tenDVC;
	}

	@Override
	public String getMaTTHC() {
		if (_maTTHC == null) {
			return "";
		}
		else {
			return _maTTHC;
		}
	}

	@Override
	public void setMaTTHC(String maTTHC) {
		_columnBitmask |= MATTHC_COLUMN_BITMASK;

		if (_originalMaTTHC == null) {
			_originalMaTTHC = _maTTHC;
		}

		_maTTHC = maTTHC;
	}

	public String getOriginalMaTTHC() {
		return GetterUtil.getString(_originalMaTTHC);
	}

	@Override
	public String getTenTTHC() {
		if (_tenTTHC == null) {
			return "";
		}
		else {
			return _tenTTHC;
		}
	}

	@Override
	public void setTenTTHC(String tenTTHC) {
		_tenTTHC = tenTTHC;
	}

	@Override
	public String getTenCQBH() {
		if (_tenCQBH == null) {
			return "";
		}
		else {
			return _tenCQBH;
		}
	}

	@Override
	public void setTenCQBH(String tenCQBH) {
		_tenCQBH = tenCQBH;
	}

	@Override
	public String getTenLinhVuc() {
		if (_tenLinhVuc == null) {
			return "";
		}
		else {
			return _tenLinhVuc;
		}
	}

	@Override
	public void setTenLinhVuc(String tenLinhVuc) {
		_tenLinhVuc = tenLinhVuc;
	}

	@Override
	public String getApdungDVC() {
		if (_apdungDVC == null) {
			return "";
		}
		else {
			return _apdungDVC;
		}
	}

	@Override
	public void setApdungDVC(String apdungDVC) {
		_apdungDVC = apdungDVC;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				ServiceConfigMapping.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ServiceConfigMapping.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ServiceConfigMapping toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ServiceConfigMapping)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ServiceConfigMappingImpl serviceConfigMappingImpl = new ServiceConfigMappingImpl();

		serviceConfigMappingImpl.setUuid(getUuid());
		serviceConfigMappingImpl.setServiceConfigMappingId(getServiceConfigMappingId());
		serviceConfigMappingImpl.setGroupId(getGroupId());
		serviceConfigMappingImpl.setCompanyId(getCompanyId());
		serviceConfigMappingImpl.setUserId(getUserId());
		serviceConfigMappingImpl.setUserName(getUserName());
		serviceConfigMappingImpl.setCreateDate(getCreateDate());
		serviceConfigMappingImpl.setModifiedDate(getModifiedDate());
		serviceConfigMappingImpl.setMaDVC(getMaDVC());
		serviceConfigMappingImpl.setTenDVC(getTenDVC());
		serviceConfigMappingImpl.setMaTTHC(getMaTTHC());
		serviceConfigMappingImpl.setTenTTHC(getTenTTHC());
		serviceConfigMappingImpl.setTenCQBH(getTenCQBH());
		serviceConfigMappingImpl.setTenLinhVuc(getTenLinhVuc());
		serviceConfigMappingImpl.setApdungDVC(getApdungDVC());

		serviceConfigMappingImpl.resetOriginalValues();

		return serviceConfigMappingImpl;
	}

	@Override
	public int compareTo(ServiceConfigMapping serviceConfigMapping) {
		long primaryKey = serviceConfigMapping.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ServiceConfigMapping)) {
			return false;
		}

		ServiceConfigMapping serviceConfigMapping = (ServiceConfigMapping)obj;

		long primaryKey = serviceConfigMapping.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ServiceConfigMappingModelImpl serviceConfigMappingModelImpl = this;

		serviceConfigMappingModelImpl._originalUuid = serviceConfigMappingModelImpl._uuid;

		serviceConfigMappingModelImpl._originalGroupId = serviceConfigMappingModelImpl._groupId;

		serviceConfigMappingModelImpl._setOriginalGroupId = false;

		serviceConfigMappingModelImpl._originalCompanyId = serviceConfigMappingModelImpl._companyId;

		serviceConfigMappingModelImpl._setOriginalCompanyId = false;

		serviceConfigMappingModelImpl._setModifiedDate = false;

		serviceConfigMappingModelImpl._originalMaTTHC = serviceConfigMappingModelImpl._maTTHC;

		serviceConfigMappingModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ServiceConfigMapping> toCacheModel() {
		ServiceConfigMappingCacheModel serviceConfigMappingCacheModel = new ServiceConfigMappingCacheModel();

		serviceConfigMappingCacheModel.uuid = getUuid();

		String uuid = serviceConfigMappingCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			serviceConfigMappingCacheModel.uuid = null;
		}

		serviceConfigMappingCacheModel.serviceConfigMappingId = getServiceConfigMappingId();

		serviceConfigMappingCacheModel.groupId = getGroupId();

		serviceConfigMappingCacheModel.companyId = getCompanyId();

		serviceConfigMappingCacheModel.userId = getUserId();

		serviceConfigMappingCacheModel.userName = getUserName();

		String userName = serviceConfigMappingCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			serviceConfigMappingCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			serviceConfigMappingCacheModel.createDate = createDate.getTime();
		}
		else {
			serviceConfigMappingCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			serviceConfigMappingCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			serviceConfigMappingCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		serviceConfigMappingCacheModel.maDVC = getMaDVC();

		String maDVC = serviceConfigMappingCacheModel.maDVC;

		if ((maDVC != null) && (maDVC.length() == 0)) {
			serviceConfigMappingCacheModel.maDVC = null;
		}

		serviceConfigMappingCacheModel.tenDVC = getTenDVC();

		String tenDVC = serviceConfigMappingCacheModel.tenDVC;

		if ((tenDVC != null) && (tenDVC.length() == 0)) {
			serviceConfigMappingCacheModel.tenDVC = null;
		}

		serviceConfigMappingCacheModel.maTTHC = getMaTTHC();

		String maTTHC = serviceConfigMappingCacheModel.maTTHC;

		if ((maTTHC != null) && (maTTHC.length() == 0)) {
			serviceConfigMappingCacheModel.maTTHC = null;
		}

		serviceConfigMappingCacheModel.tenTTHC = getTenTTHC();

		String tenTTHC = serviceConfigMappingCacheModel.tenTTHC;

		if ((tenTTHC != null) && (tenTTHC.length() == 0)) {
			serviceConfigMappingCacheModel.tenTTHC = null;
		}

		serviceConfigMappingCacheModel.tenCQBH = getTenCQBH();

		String tenCQBH = serviceConfigMappingCacheModel.tenCQBH;

		if ((tenCQBH != null) && (tenCQBH.length() == 0)) {
			serviceConfigMappingCacheModel.tenCQBH = null;
		}

		serviceConfigMappingCacheModel.tenLinhVuc = getTenLinhVuc();

		String tenLinhVuc = serviceConfigMappingCacheModel.tenLinhVuc;

		if ((tenLinhVuc != null) && (tenLinhVuc.length() == 0)) {
			serviceConfigMappingCacheModel.tenLinhVuc = null;
		}

		serviceConfigMappingCacheModel.apdungDVC = getApdungDVC();

		String apdungDVC = serviceConfigMappingCacheModel.apdungDVC;

		if ((apdungDVC != null) && (apdungDVC.length() == 0)) {
			serviceConfigMappingCacheModel.apdungDVC = null;
		}

		return serviceConfigMappingCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", serviceConfigMappingId=");
		sb.append(getServiceConfigMappingId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", maDVC=");
		sb.append(getMaDVC());
		sb.append(", tenDVC=");
		sb.append(getTenDVC());
		sb.append(", maTTHC=");
		sb.append(getMaTTHC());
		sb.append(", tenTTHC=");
		sb.append(getTenTTHC());
		sb.append(", tenCQBH=");
		sb.append(getTenCQBH());
		sb.append(", tenLinhVuc=");
		sb.append(getTenLinhVuc());
		sb.append(", apdungDVC=");
		sb.append(getApdungDVC());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("pay.gate.integration.dvc.model.ServiceConfigMapping");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceConfigMappingId</column-name><column-value><![CDATA[");
		sb.append(getServiceConfigMappingId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maDVC</column-name><column-value><![CDATA[");
		sb.append(getMaDVC());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tenDVC</column-name><column-value><![CDATA[");
		sb.append(getTenDVC());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maTTHC</column-name><column-value><![CDATA[");
		sb.append(getMaTTHC());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tenTTHC</column-name><column-value><![CDATA[");
		sb.append(getTenTTHC());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tenCQBH</column-name><column-value><![CDATA[");
		sb.append(getTenCQBH());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tenLinhVuc</column-name><column-value><![CDATA[");
		sb.append(getTenLinhVuc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>apdungDVC</column-name><column-value><![CDATA[");
		sb.append(getApdungDVC());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ServiceConfigMapping.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ServiceConfigMapping.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _serviceConfigMappingId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _maDVC;
	private String _tenDVC;
	private String _maTTHC;
	private String _originalMaTTHC;
	private String _tenTTHC;
	private String _tenCQBH;
	private String _tenLinhVuc;
	private String _apdungDVC;
	private long _columnBitmask;
	private ServiceConfigMapping _escapedModel;
}