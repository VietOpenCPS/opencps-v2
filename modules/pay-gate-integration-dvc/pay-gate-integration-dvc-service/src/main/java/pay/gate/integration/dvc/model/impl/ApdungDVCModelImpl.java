/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package pay.gate.integration.dvc.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.petra.string.StringBundler;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import pay.gate.integration.dvc.model.ApdungDVC;
import pay.gate.integration.dvc.model.ApdungDVCModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ApdungDVC service. Represents a row in the &quot;opencps_apdungDVC&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ApdungDVCModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ApdungDVCImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ApdungDVCImpl
 * @see ApdungDVC
 * @see ApdungDVCModel
 * @generated
 */
@ProviderType
public class ApdungDVCModelImpl extends BaseModelImpl<ApdungDVC>
	implements ApdungDVCModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a apdung dvc model instance should use the {@link ApdungDVC} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_apdungDVC";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "apdungDVCId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "maTTHC", Types.VARCHAR },
			{ "maCQTH", Types.VARCHAR },
			{ "mucdo", Types.INTEGER },
			{ "serviceConfigMappingId", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("apdungDVCId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("maTTHC", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("maCQTH", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mucdo", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("serviceConfigMappingId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_apdungDVC (uuid_ VARCHAR(75) null,apdungDVCId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,maTTHC VARCHAR(75) null,maCQTH VARCHAR(75) null,mucdo INTEGER,serviceConfigMappingId LONG)";
	public static final String TABLE_SQL_DROP = "drop table opencps_apdungDVC";
	public static final String ORDER_BY_JPQL = " ORDER BY apdungDVC.apdungDVCId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_apdungDVC.apdungDVCId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(pay.gate.integration.dvc.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.pay.gate.integration.dvc.model.ApdungDVC"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(pay.gate.integration.dvc.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.pay.gate.integration.dvc.model.ApdungDVC"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(pay.gate.integration.dvc.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.pay.gate.integration.dvc.model.ApdungDVC"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long MACQTH_COLUMN_BITMASK = 4L;
	public static final long MATTHC_COLUMN_BITMASK = 8L;
	public static final long MUCDO_COLUMN_BITMASK = 16L;
	public static final long UUID_COLUMN_BITMASK = 32L;
	public static final long APDUNGDVCID_COLUMN_BITMASK = 64L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(pay.gate.integration.dvc.service.util.ServiceProps.get(
				"lock.expiration.time.pay.gate.integration.dvc.model.ApdungDVC"));

	public ApdungDVCModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _apdungDVCId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setApdungDVCId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _apdungDVCId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ApdungDVC.class;
	}

	@Override
	public String getModelClassName() {
		return ApdungDVC.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("apdungDVCId", getApdungDVCId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("maTTHC", getMaTTHC());
		attributes.put("maCQTH", getMaCQTH());
		attributes.put("mucdo", getMucdo());
		attributes.put("serviceConfigMappingId", getServiceConfigMappingId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long apdungDVCId = (Long)attributes.get("apdungDVCId");

		if (apdungDVCId != null) {
			setApdungDVCId(apdungDVCId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String maTTHC = (String)attributes.get("maTTHC");

		if (maTTHC != null) {
			setMaTTHC(maTTHC);
		}

		String maCQTH = (String)attributes.get("maCQTH");

		if (maCQTH != null) {
			setMaCQTH(maCQTH);
		}

		Integer mucdo = (Integer)attributes.get("mucdo");

		if (mucdo != null) {
			setMucdo(mucdo);
		}

		Long serviceConfigMappingId = (Long)attributes.get(
				"serviceConfigMappingId");

		if (serviceConfigMappingId != null) {
			setServiceConfigMappingId(serviceConfigMappingId);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getApdungDVCId() {
		return _apdungDVCId;
	}

	@Override
	public void setApdungDVCId(long apdungDVCId) {
		_apdungDVCId = apdungDVCId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getMaTTHC() {
		if (_maTTHC == null) {
			return "";
		}
		else {
			return _maTTHC;
		}
	}

	@Override
	public void setMaTTHC(String maTTHC) {
		_columnBitmask |= MATTHC_COLUMN_BITMASK;

		if (_originalMaTTHC == null) {
			_originalMaTTHC = _maTTHC;
		}

		_maTTHC = maTTHC;
	}

	public String getOriginalMaTTHC() {
		return GetterUtil.getString(_originalMaTTHC);
	}

	@Override
	public String getMaCQTH() {
		if (_maCQTH == null) {
			return "";
		}
		else {
			return _maCQTH;
		}
	}

	@Override
	public void setMaCQTH(String maCQTH) {
		_columnBitmask |= MACQTH_COLUMN_BITMASK;

		if (_originalMaCQTH == null) {
			_originalMaCQTH = _maCQTH;
		}

		_maCQTH = maCQTH;
	}

	public String getOriginalMaCQTH() {
		return GetterUtil.getString(_originalMaCQTH);
	}

	@Override
	public int getMucdo() {
		return _mucdo;
	}

	@Override
	public void setMucdo(int mucdo) {
		_columnBitmask |= MUCDO_COLUMN_BITMASK;

		if (!_setOriginalMucdo) {
			_setOriginalMucdo = true;

			_originalMucdo = _mucdo;
		}

		_mucdo = mucdo;
	}

	public int getOriginalMucdo() {
		return _originalMucdo;
	}

	@Override
	public long getServiceConfigMappingId() {
		return _serviceConfigMappingId;
	}

	@Override
	public void setServiceConfigMappingId(long serviceConfigMappingId) {
		_serviceConfigMappingId = serviceConfigMappingId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				ApdungDVC.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ApdungDVC.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ApdungDVC toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ApdungDVC)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ApdungDVCImpl apdungDVCImpl = new ApdungDVCImpl();

		apdungDVCImpl.setUuid(getUuid());
		apdungDVCImpl.setApdungDVCId(getApdungDVCId());
		apdungDVCImpl.setGroupId(getGroupId());
		apdungDVCImpl.setCompanyId(getCompanyId());
		apdungDVCImpl.setUserId(getUserId());
		apdungDVCImpl.setUserName(getUserName());
		apdungDVCImpl.setCreateDate(getCreateDate());
		apdungDVCImpl.setModifiedDate(getModifiedDate());
		apdungDVCImpl.setMaTTHC(getMaTTHC());
		apdungDVCImpl.setMaCQTH(getMaCQTH());
		apdungDVCImpl.setMucdo(getMucdo());
		apdungDVCImpl.setServiceConfigMappingId(getServiceConfigMappingId());

		apdungDVCImpl.resetOriginalValues();

		return apdungDVCImpl;
	}

	@Override
	public int compareTo(ApdungDVC apdungDVC) {
		long primaryKey = apdungDVC.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ApdungDVC)) {
			return false;
		}

		ApdungDVC apdungDVC = (ApdungDVC)obj;

		long primaryKey = apdungDVC.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ApdungDVCModelImpl apdungDVCModelImpl = this;

		apdungDVCModelImpl._originalUuid = apdungDVCModelImpl._uuid;

		apdungDVCModelImpl._originalGroupId = apdungDVCModelImpl._groupId;

		apdungDVCModelImpl._setOriginalGroupId = false;

		apdungDVCModelImpl._originalCompanyId = apdungDVCModelImpl._companyId;

		apdungDVCModelImpl._setOriginalCompanyId = false;

		apdungDVCModelImpl._setModifiedDate = false;

		apdungDVCModelImpl._originalMaTTHC = apdungDVCModelImpl._maTTHC;

		apdungDVCModelImpl._originalMaCQTH = apdungDVCModelImpl._maCQTH;

		apdungDVCModelImpl._originalMucdo = apdungDVCModelImpl._mucdo;

		apdungDVCModelImpl._setOriginalMucdo = false;

		apdungDVCModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ApdungDVC> toCacheModel() {
		ApdungDVCCacheModel apdungDVCCacheModel = new ApdungDVCCacheModel();

		apdungDVCCacheModel.uuid = getUuid();

		String uuid = apdungDVCCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			apdungDVCCacheModel.uuid = null;
		}

		apdungDVCCacheModel.apdungDVCId = getApdungDVCId();

		apdungDVCCacheModel.groupId = getGroupId();

		apdungDVCCacheModel.companyId = getCompanyId();

		apdungDVCCacheModel.userId = getUserId();

		apdungDVCCacheModel.userName = getUserName();

		String userName = apdungDVCCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			apdungDVCCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			apdungDVCCacheModel.createDate = createDate.getTime();
		}
		else {
			apdungDVCCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			apdungDVCCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			apdungDVCCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		apdungDVCCacheModel.maTTHC = getMaTTHC();

		String maTTHC = apdungDVCCacheModel.maTTHC;

		if ((maTTHC != null) && (maTTHC.length() == 0)) {
			apdungDVCCacheModel.maTTHC = null;
		}

		apdungDVCCacheModel.maCQTH = getMaCQTH();

		String maCQTH = apdungDVCCacheModel.maCQTH;

		if ((maCQTH != null) && (maCQTH.length() == 0)) {
			apdungDVCCacheModel.maCQTH = null;
		}

		apdungDVCCacheModel.mucdo = getMucdo();

		apdungDVCCacheModel.serviceConfigMappingId = getServiceConfigMappingId();

		return apdungDVCCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", apdungDVCId=");
		sb.append(getApdungDVCId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", maTTHC=");
		sb.append(getMaTTHC());
		sb.append(", maCQTH=");
		sb.append(getMaCQTH());
		sb.append(", mucdo=");
		sb.append(getMucdo());
		sb.append(", serviceConfigMappingId=");
		sb.append(getServiceConfigMappingId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("pay.gate.integration.dvc.model.ApdungDVC");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>apdungDVCId</column-name><column-value><![CDATA[");
		sb.append(getApdungDVCId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maTTHC</column-name><column-value><![CDATA[");
		sb.append(getMaTTHC());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maCQTH</column-name><column-value><![CDATA[");
		sb.append(getMaCQTH());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mucdo</column-name><column-value><![CDATA[");
		sb.append(getMucdo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceConfigMappingId</column-name><column-value><![CDATA[");
		sb.append(getServiceConfigMappingId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ApdungDVC.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ApdungDVC.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _apdungDVCId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _maTTHC;
	private String _originalMaTTHC;
	private String _maCQTH;
	private String _originalMaCQTH;
	private int _mucdo;
	private int _originalMucdo;
	private boolean _setOriginalMucdo;
	private long _serviceConfigMappingId;
	private long _columnBitmask;
	private ApdungDVC _escapedModel;
}